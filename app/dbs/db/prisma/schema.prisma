generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model m_activity {
  id                              Int                               @id(map: "m_activity_category_id") @default(autoincrement())
  type                            String                            @db.VarChar(50)
  description                     String?
  m_activity_laytime              m_activity_laytime[]
  m_bwt_exclude                   m_bwt_exclude[]
  t_logsheet_additional_equipment t_logsheet_additional_equipment[]
  t_logsheet_in_vessel_equipment  t_logsheet_in_vessel_equipment[]
  t_maintenance_details           t_maintenance_details[]
  t_target_hours                  t_target_hours[]
  t_vessel_arrival_logsheet       t_vessel_arrival_logsheet[]
  t_vessel_arrival_timesheet      t_vessel_arrival_timesheet[]
}

model m_activity_laytime {
  id          Int        @id(map: "m_activity_laytime_pkey1") @default(autoincrement())
  id_activity Int
  id_laytime  Int
  m_activity  m_activity @relation(fields: [id_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_laytime   m_laytime  @relation(fields: [id_laytime], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_area {
  id                        Int                         @id(map: "m_area_id") @default(autoincrement())
  name                      String                      @db.VarChar
  description               String?                     @db.VarChar
  m_asset_items             m_asset_items[]
  t_asset_maintenance       t_asset_maintenance[]
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_arrival_term {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_arrival_type {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar
  m_cargo            m_cargo[]
  m_cargo_orde       m_cargo_orde[]
  t_target_hours     t_target_hours[]
  t_tonnage_planning t_tonnage_planning[]
  t_vessel_arrival   t_vessel_arrival[]
}

model m_asset {
  id                                    Int                               @id(map: "m_asset_id") @default(autoincrement())
  name                                  String                            @db.VarChar(255)
  description                           String?
  status                                String                            @default("Ready") @db.VarChar
  id_type                               Int?                              @default(2)
  img_repo                              String?                           @db.VarChar
  device_code                           String?                           @db.VarChar
  last_status_operator                  String?                           @db.VarChar
  meter_start                           Int?                              @default(0)
  meter_end                             Int?                              @default(0)
  has_vessel_length_limit               Boolean?                          @default(false)
  id_port                               Int?
  coords                                Json?
  id_jetty                              Int?
  id_status                             Int?                              @default(1)
  id_ownership                          Int?                              @default(1)
  is_parallelable                       Boolean?                          @default(false)
  wsm                                   Boolean?                          @default(false)
  secondary_asset                       Int?
  area                                  Int?
  m_jetty                               m_jetty?                          @relation(fields: [id_jetty], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_ownership                           m_ownership?                      @relation(fields: [id_ownership], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_port                                m_port?                           @relation(fields: [id_port], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset_status                        m_asset_status?                   @relation(fields: [id_status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset_type                          m_asset_type?                     @relation(fields: [id_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset                               m_asset?                          @relation("m_assetTom_asset_secondary_asset", fields: [secondary_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_m_asset                         m_asset[]                         @relation("m_assetTom_asset_secondary_asset")
  m_asset_items                         m_asset_items[]
  m_housekeeping_asset                  m_housekeeping_asset[]
  m_maintenance_items                   m_maintenance_items[]
  m_productivity_tw_combination         m_productivity_tw_combination[]
  m_route_m_assetTom_route_id_asset     m_route[]                         @relation("m_assetTom_route_id_asset")
  m_route_m_assetTom_route_id_asset_end m_route[]                         @relation("m_assetTom_route_id_asset_end")
  m_route_conveyors                     m_route_conveyors[]
  t_asset_maintenance                   t_asset_maintenance[]
  t_au_breakdown_planning               t_au_breakdown_planning[]
  t_au_discharging_planning             t_au_discharging_planning[]
  t_au_running_planning                 t_au_running_planning[]
  t_contract_management                 t_contract_management[]
  t_discharging_rate_planning_a         t_discharging_rate_planning_a[]
  t_housekeeping_asset                  t_housekeeping_asset[]
  t_housekeeping_checklist              t_housekeeping_checklist[]
  t_housekeeping_item                   t_housekeeping_item[]
  t_logsheet_additional_equipment       t_logsheet_additional_equipment[]
  t_logsheet_in_vessel_equipment        t_logsheet_in_vessel_equipment[]
  t_maintenance_details                 t_maintenance_details[]
  t_maintenance_lubricant               t_maintenance_lubricant[]
  t_service_request                     t_service_request[]
  t_target_hours                        t_target_hours[]
  t_vessel_arrival_logsheet             t_vessel_arrival_logsheet[]
  t_vessel_arrival_logsheet_hose        t_vessel_arrival_logsheet_hose[]
  t_vessel_cargo                        t_vessel_cargo[]
  t_vessel_cargo_productivity           t_vessel_cargo_productivity[]
  t_wms_io                              t_wms_io[]
}

model m_asset_items {
  id                              Int                               @id @default(autoincrement())
  id_asset                        Int
  name                            String?                           @db.VarChar
  id_work_center                  Int?
  id_area                         Int?
  m_area                          m_area?                           @relation(fields: [id_area], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset                         m_asset                           @relation(fields: [id_asset], references: [id], onUpdate: Restrict)
  m_work_center                   m_work_center?                    @relation(fields: [id_work_center], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset_item_troubles           m_asset_item_troubles[]
  t_asset_maintenance_items       t_asset_maintenance_items[]
  t_housekeeping_checklist_item   t_housekeeping_checklist_item[]
  t_maintenance_details_items     t_maintenance_details_items[]
  t_vessel_arrival_logsheet       t_vessel_arrival_logsheet[]
  t_vessel_arrival_logsheet_items t_vessel_arrival_logsheet_items[]
}

model m_asset_item_troubles {
  id                        Int                         @id(map: "m_asset_item_trouble_pkey") @default(autoincrement())
  id_trouble                Int?
  id_item                   Int
  m_asset_items             m_asset_items               @relation(fields: [id_item], references: [id], onUpdate: Restrict, map: "m_asset_item_trouble_id_item_fkey")
  m_trouble                 m_trouble?                  @relation(fields: [id_trouble], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "m_asset_item_trouble_id_trouble_fkey")
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_asset_status {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar
  m_asset m_asset[]
}

model m_asset_type {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar
  m_asset m_asset[]
}

model m_bariksama_activity {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bariksama_ba {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bariksama_tariff_emkl {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bariksama_tariff_pbm {
  id               Int                @id(map: "m_bariksama_tariff_pkey") @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bariksama_tariff_surv {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bariksama_type {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  t_vessel_arrival t_vessel_arrival[]
}

model m_bwt_exclude {
  id          Int        @id @default(autoincrement())
  id_activity Int
  m_activity  m_activity @relation(fields: [id_activity], references: [id], onUpdate: Restrict)
}

model m_cargo {
  id                        Int                         @id(map: "m_cargo_id") @default(autoincrement())
  id_category               Int                         @default(1)
  name                      String                      @db.VarChar(25)
  id_uom                    Int
  id_cargo_orde             Int?
  id_arrival_type           Int?
  id_procurement            Int                         @default(1)
  id_status                 Int?                        @default(1)
  visual_color              String?                     @db.VarChar
  wsm                       Boolean?                    @default(false)
  m_arrival_type            m_arrival_type?             @relation(fields: [id_arrival_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_cargo_orde              m_cargo_orde?               @relation(fields: [id_cargo_orde], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_cargo_category          m_cargo_category            @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo_procurement       m_cargo_procurement         @relation(fields: [id_procurement], references: [id], onUpdate: Restrict)
  m_cargo_status            m_cargo_status?             @relation(fields: [id_status], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_cargo_uom               m_cargo_uom                 @relation(fields: [id_uom], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_route_compatible_cargos m_route_compatible_cargos[]
  m_target_cargo            m_target_cargo[]
  m_warehouse_cargo         m_warehouse_cargo[]
  m_wms_pillars             m_wms_pillars[]
  m_wms_pillars_cargo       m_wms_pillars_cargo[]
  t_tonnage_planning        t_tonnage_planning[]
  t_vessel_additional_cargo t_vessel_additional_cargo[]
  t_vessel_cargo            t_vessel_cargo[]
  t_vessel_cargo_consignee  t_vessel_cargo_consignee[]
  t_wms_io                  t_wms_io[]
}

model m_cargo_category {
  id                       Int                        @id(map: "m_cargo_category_id") @default(autoincrement())
  name                     String                     @db.VarChar(255)
  description              String?
  m_cargo                  m_cargo[]
  t_tonnage_planning       t_tonnage_planning[]
  t_vessel_cargo           t_vessel_cargo[]
  t_vessel_cargo_consignee t_vessel_cargo_consignee[]
}

model m_cargo_category_additional {
  id                        Int                         @id(map: "m_additional_cargo_category_pkey") @default(autoincrement())
  name                      String                      @db.VarChar
  t_vessel_additional_cargo t_vessel_additional_cargo[]
}

model m_cargo_orde {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar
  id_arrival_type          Int
  m_arrival_type           m_arrival_type             @relation(fields: [id_arrival_type], references: [id], onUpdate: Restrict)
  m_cargo                  m_cargo[]
  t_vessel_cargo           t_vessel_cargo[]
  t_vessel_cargo_consignee t_vessel_cargo_consignee[]
}

model m_cargo_owner {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar
  full_name                String?                    @db.VarChar
  id_user                  Int?
  p_user                   p_user?                    @relation(fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_tonnage_planning       t_tonnage_planning[]
  t_vessel_cargo           t_vessel_cargo[]
  t_vessel_cargo_consignee t_vessel_cargo_consignee[]
}

model m_cargo_procurement {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar
  m_cargo            m_cargo[]
  t_tonnage_planning t_tonnage_planning[]
}

model m_cargo_status {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar
  m_cargo m_cargo[]
}

model m_cargo_uom {
  id          Int       @id(map: "m_uom_id") @default(autoincrement())
  uom         String    @db.VarChar(256)
  description String?   @db.VarChar(256)
  m_cargo     m_cargo[]
}

model m_checksheet {
  id                                Int                                @id @default(autoincrement())
  name                              String                             @db.VarChar(255)
  equipment_id                      Int
  scope_id                          Int
  filler_id                         Int
  asset_id                          Int                                @db.SmallInt
  subasset_id                       Int                                @db.SmallInt
  created_at                        DateTime                           @db.Timestamp(6)
  created_by                        Int
  id_condition                      Int?
  m_checksheet_asset                m_checksheet_asset                 @relation(fields: [asset_id], references: [id], onUpdate: Restrict)
  p_user                            p_user                             @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_equipment           m_maintenance_equipment            @relation(fields: [equipment_id], references: [id], onUpdate: Restrict, map: "m_checksheet_o&mService_id_fkey")
  m_checksheet_filler               m_checksheet_filler                @relation(fields: [filler_id], references: [id], onUpdate: Restrict)
  t_maintenance_execution_condition t_maintenance_execution_condition? @relation(fields: [id_condition], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_maintenance_scope               m_maintenance_scope                @relation(fields: [scope_id], references: [id], onUpdate: Restrict, map: "m_checksheet_instrumen_id_fkey")
  m_checksheet_asset_sub            m_checksheet_asset_sub             @relation(fields: [subasset_id], references: [id], onUpdate: Restrict, map: "m_checksheet_subAsset_id_fkey")
  m_checksheet_category             m_checksheet_category[]
  m_checksheet_equipment            m_checksheet_equipment[]
  t_checksheet                      t_checksheet[]
}

model m_checksheet_action {
  id                   Int                    @id @default(autoincrement())
  name                 String
  t_checksheet_details t_checksheet_details[]
}

model m_checksheet_asset {
  id                                           Int                      @id @default(autoincrement())
  name                                         String                   @db.VarChar
  description                                  String?
  created_by                                   Int
  created_date                                 DateTime                 @db.Timestamp(6)
  updated_by                                   Int
  updated_date                                 DateTime                 @db.Timestamp(6)
  p_user_m_checksheet_asset_created_byTop_user p_user                   @relation("m_checksheet_asset_created_byTop_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_m_checksheet_asset_updated_byTop_user p_user                   @relation("m_checksheet_asset_updated_byTop_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet                                 m_checksheet[]
  m_checksheet_asset_sub                       m_checksheet_asset_sub[]
}

model m_checksheet_asset_sub {
  id                  Int                 @id @default(autoincrement())
  id_checksheet_asset Int?
  description         String?             @db.VarChar
  created_by          Int?
  created_date        DateTime?           @db.Timestamp(6)
  updated_by          Int?
  updated_date        DateTime?           @db.Timestamp(6)
  name                String              @db.VarChar
  m_checksheet_asset  m_checksheet_asset? @relation(fields: [id_checksheet_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet        m_checksheet[]
}

model m_checksheet_category {
  id                      Int                      @id @default(autoincrement())
  name                    String                   @db.VarChar
  created_by              Int
  created_date            DateTime                 @db.Timestamp(6)
  updated_by              Int?
  updated_date            DateTime?                @db.Timestamp(6)
  id_checksheet           Int?
  is_condition_good_total Boolean?                 @default(false)
  is_condition_bad_total  Boolean?
  is_condition_total      Boolean?
  is_contact              Boolean?
  is_tegangan             Boolean?
  is_keterangan           Boolean?
  is_in                   Boolean?
  is_out                  Boolean?
  is_condition_checkbox   Boolean?
  is_condition_dropdown   Boolean?
  is_cleaning_checkbox    Boolean?
  is_cleaning_dropdown    Boolean?
  is_rusak                Boolean?
  is_kosong               Boolean?
  is_actual_field         Boolean?
  is_actual_checkbox      Boolean?
  is_actual_dropdown      Boolean?
  is_value_dropdown       Boolean?
  is_standard             Boolean?
  is_good_field           Boolean?
  is_bad_field            Boolean?
  m_checksheet            m_checksheet?            @relation(fields: [id_checksheet], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "m_checksheet_category_checksheet_id_fkey")
  m_checksheet_parameter  m_checksheet_parameter[]
}

model m_checksheet_category_type {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar
  created_at DateTime @db.Timestamp(6)
  created_by Int
}

model m_checksheet_equipment {
  id                  Int                  @id @default(autoincrement())
  id_equipment        Int?
  created_at          DateTime?            @db.Timestamp(6)
  created_by          Int?
  id_m_checksheet     Int?
  p_user              p_user?              @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_items m_maintenance_items? @relation(fields: [id_equipment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet        m_checksheet?        @relation(fields: [id_m_checksheet], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_checksheet_filler {
  id                                                                          Int                    @id @default(autoincrement())
  name                                                                        String                 @db.VarChar
  m_checksheet                                                                m_checksheet[]
  t_checksheet_details_m_checksheet_fillerTot_checksheet_details_pic_approver t_checksheet_details[] @relation("m_checksheet_fillerTot_checksheet_details_pic_approver")
  t_checksheet_details_m_checksheet_fillerTot_checksheet_details_pic_filler   t_checksheet_details[] @relation("m_checksheet_fillerTot_checksheet_details_pic_filler")
}

model m_checksheet_parameter {
  id                            Int                    @id @default(autoincrement())
  condition                     String?
  condition_is_fine_default     Boolean?               @default(false)
  condition_description_default String?
  area                          String?
  created_by                    Int
  created_date                  DateTime               @db.Timestamp(6)
  updated_by                    Int
  updated_date                  DateTime               @db.Timestamp(6)
  id_checksheet_category        Int
  parameter_name                String?
  parameter_std_min             Int?
  parameter_std_max             Int?
  std_in                        String?
  std_out                       String?
  std_contact                   String?
  std_tegangan                  String?
  standard                      String?
  parameter_std_in_min          Int?
  parameter_std_in_max          Int?
  parameter_std_out_min         Int?
  parameter_std_out_max         Int?
  parameter_std_tegangan_min    Int?
  parameter_std_tegangan_max    Int?
  m_checksheet_category         m_checksheet_category  @relation(fields: [id_checksheet_category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_checksheet_details          t_checksheet_details[]
}

model m_config {
  id    Int    @id @default(autoincrement())
  key   String @unique @db.VarChar
  value Json
}

model m_contract_management_type {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(250)
  t_contract_management     t_contract_management[]
  t_service_request_details t_service_request_details[]
}

model m_contract_status {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(50)
  t_contract_management t_contract_management[]
}

model m_contract_type {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar
  t_contract_management t_contract_management[]
  t_service_request     t_service_request[]
}

model m_currency {
  id                                                     Int                  @id(map: "m_currency_pkey1") @default(autoincrement())
  name                                                   String               @db.VarChar
  m_currency_convert_m_currencyTom_currency_convert_from m_currency_convert[] @relation("m_currencyTom_currency_convert_from")
  m_currency_convert_m_currencyTom_currency_convert_to   m_currency_convert[] @relation("m_currencyTom_currency_convert_to")
}

model m_currency_convert {
  id                                             Int         @id(map: "m_currency_pkey") @default(autoincrement())
  amount                                         Float
  amount_converted                               Float
  from                                           Int?
  to                                             Int?
  m_currency_m_currencyTom_currency_convert_from m_currency? @relation("m_currencyTom_currency_convert_from", fields: [from], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_currency_m_currencyTom_currency_convert_to   m_currency? @relation("m_currencyTom_currency_convert_to", fields: [to], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_document_region {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar
  m_document_type m_document_type[]
}

model m_document_status {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar
  t_project_document         t_project_document[]
  t_vessel_arrival_documents t_vessel_arrival_documents[]
}

model m_document_type {
  id                                              Int                          @id @default(autoincrement())
  name                                            String                       @db.VarChar
  is_required                                     Boolean?                     @default(true)
  id_uploader_role                                Int?
  id_document_region                              Int?
  required_on_berthing                            Boolean?                     @default(false)
  required_on_unberthing                          Boolean?                     @default(false)
  id_approver_role                                Int?
  required_on_project_management                  Boolean?                     @default(false)
  p_role_m_document_type_id_approver_roleTop_role p_role?                      @relation("m_document_type_id_approver_roleTop_role", fields: [id_approver_role], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_document_region                               m_document_region?           @relation(fields: [id_document_region], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_role_m_document_type_id_uploader_roleTop_role p_role?                      @relation("m_document_type_id_uploader_roleTop_role", fields: [id_uploader_role], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_document                              t_project_document[]
  t_vessel_arrival_documents                      t_vessel_arrival_documents[]
}

model m_drlr_rate_note {
  id                        Int                         @id @default(autoincrement())
  name                      String?
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_holiday {
  id               Int      @id @default(autoincrement())
  name             String   @db.VarChar
  date             DateTime @db.Date
  multiplier       Float?   @default(1)
  count_as_holiday Boolean  @default(false)
}

model m_homepage_annual_report {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar
  link      String
  thumbnail String
}

model m_housekeeping_asset {
  id       Int     @id @default(autoincrement())
  id_asset Int
  id_user  Int
  m_asset  m_asset @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user   p_user  @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_housekeeping_group {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  t_housekeeping_checklist t_housekeeping_checklist[]
}

model m_housekeeping_payrate {
  id                       Int                        @id(map: "m_housekeeping_tarif_pkey") @default(autoincrement())
  name                     String                     @db.VarChar(250)
  price                    Decimal                    @db.Decimal(20, 2)
  t_housekeeping           t_housekeeping[]
  t_housekeeping_checklist t_housekeeping_checklist[]
}

model m_housekeeping_status {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(250)
  t_housekeeping                t_housekeeping[]
  t_housekeeping_checklist_item t_housekeeping_checklist_item[]
}

model m_isps {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar
  no   Int?   @default(1)
}

model m_jetty {
  id               Int                @id(map: "m_jetty_id") @default(autoincrement())
  name             String             @db.VarChar(255)
  length           Float              @default(0)
  width            Float              @default(0)
  capacity         Float              @default(0)
  max_draught      Float              @default(0)
  id_port          Int?
  coords           Json?
  meter_start      Int                @default(0)
  m_port           m_port?            @relation(fields: [id_port], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset          m_asset[]
  m_jetty_parts    m_jetty_parts[]
  t_vessel_arrival t_vessel_arrival[]
}

model m_jetty_parts {
  id                         Int                          @id @default(autoincrement())
  id_jetty                   Int
  name                       String                       @db.VarChar
  meter_start                Float
  meter_end                  Float
  space                      Float                        @default(0)
  m_jetty                    m_jetty                      @relation(fields: [id_jetty], references: [id], onUpdate: Restrict)
  t_bor                      t_bor[]
  t_vessel_arrival           t_vessel_arrival[]
  t_vessel_arrival_timesheet t_vessel_arrival_timesheet[]
}

model m_kpi {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar
  query                 String?
  code                  String?
  description           String?
  id_category           Int?
  unit                  String?                 @db.VarChar
  weight                Float?
  id_type               Int?
  id_kpi_manual         Int?
  target                Int?                    @default(1)
  m_kpi_category        m_kpi_category?         @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_kpi_manual          m_kpi_manual?           @relation(fields: [id_kpi_manual], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_kpi_type            m_kpi_type?             @relation(fields: [id_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_kpi_assignment      m_kpi_assignment[]
  t_kpi_manual_personel t_kpi_manual_personel[]
  t_kpi_result          t_kpi_result[]
}

model m_kpi_assignment {
  id          Int         @id(map: "m_kpi_position_pkey") @default(autoincrement())
  id_kpi      Int
  id_kpi_role Int?
  m_kpi       m_kpi       @relation(fields: [id_kpi], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "m_kpi_position_id_kpi_fkey")
  p_kpi_role  p_kpi_role? @relation(fields: [id_kpi_role], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "m_kpi_position_id_kpi_role_fkey")
}

model m_kpi_category {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar
  m_kpi m_kpi[]
}

model m_kpi_manual {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar
  description        String?
  m_kpi              m_kpi[]
  m_kpi_manual_input m_kpi_manual_input[]
}

model m_kpi_manual_input {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar
  value                 Int
  id_kpi_manual         Int
  m_kpi_manual          m_kpi_manual            @relation(fields: [id_kpi_manual], references: [id], onUpdate: Restrict)
  t_kpi_manual_personel t_kpi_manual_personel[]
}

model m_kpi_personel_tree {
  id                                           Int    @id(map: "m_organization_tree_pkey") @default(autoincrement())
  id_parent                                    Int
  id_child                                     Int
  p_user_m_kpi_personel_tree_id_childTop_user  p_user @relation("m_kpi_personel_tree_id_childTop_user", fields: [id_child], references: [id], onUpdate: Restrict, map: "m_organization_tree_id_child_fkey")
  p_user_m_kpi_personel_tree_id_parentTop_user p_user @relation("m_kpi_personel_tree_id_parentTop_user", fields: [id_parent], references: [id], onUpdate: Restrict, map: "m_organization_tree_id_parent_fkey")
}

model m_kpi_type {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar
  m_kpi m_kpi[]
}

model m_laytime {
  id                 Int                  @id(map: "m_activity_laytime_pkey") @default(autoincrement())
  name               String               @db.VarChar
  is_exclude_ltu     Boolean?             @default(false)
  m_activity_laytime m_activity_laytime[]
}

model m_laytime_start_count {
  id               Int                @id(map: "m_laytime_start_count_id") @default(autoincrement())
  laytime          String             @db.VarChar(256)
  description      String?            @db.VarChar(256)
  t_vessel_arrival t_vessel_arrival[]
}

model m_liquid_logsheet {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar
  m_liquid_logsheet_routes m_liquid_logsheet_routes[]
}

model m_liquid_logsheet_routes {
  id                 Int               @id @default(autoincrement())
  id_liquid_logsheet Int
  id_route           Int
  m_liquid_logsheet  m_liquid_logsheet @relation(fields: [id_liquid_logsheet], references: [id], onUpdate: Restrict)
  m_route            m_route           @relation(fields: [id_route], references: [id], onUpdate: Restrict)
}

model m_location {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  description      String
  t_vessel_arrival t_vessel_arrival[]
}

model m_maintenance_area {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar
  t_maintenance_details t_maintenance_details[]
}

model m_maintenance_equipment {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar
  m_checksheet              m_checksheet[]
  t_maintenance_execution   t_maintenance_execution[]
  t_maintenance_pm_planning t_maintenance_pm_planning[]
}

model m_maintenance_items {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar
  id_asset                  Int
  description               String?
  created_by                Int
  created_date              DateTime                    @db.Timestamp(6)
  updated_by                Int
  updated_date              DateTime                    @db.Timestamp(6)
  m_asset                   m_asset                     @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet_equipment    m_checksheet_equipment[]
  t_maintenance_execution   t_maintenance_execution[]
  t_maintenance_pm_planning t_maintenance_pm_planning[]
}

model m_maintenance_lubricant {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar
  usage_cycle_days        Float
  t_maintenance_lubricant t_maintenance_lubricant[]
}

model m_maintenance_materials {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar
  qty_start               Float?
  t_maintenance_execution t_maintenance_execution[]
  t_maintenance_materials t_maintenance_materials[]
}

model m_maintenance_safety_category {
  id                                                                                                                 Int                            @id @default(autoincrement())
  name                                                                                                               String                         @db.VarChar
  t_maintenance_safety_details_m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_after  t_maintenance_safety_details[] @relation("m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_after")
  t_maintenance_safety_details_m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_before t_maintenance_safety_details[] @relation("m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_before")
}

model m_maintenance_safety_jetty {
  id                                                                                                           Int                            @id @default(autoincrement())
  name                                                                                                         String                         @db.VarChar
  t_maintenance_safety_details_m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_after  t_maintenance_safety_details[] @relation("m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_after")
  t_maintenance_safety_details_m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_before t_maintenance_safety_details[] @relation("m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_before")
}

model m_maintenance_scope {
  id                           Int                            @id @default(autoincrement())
  name                         String                         @db.VarChar
  m_checksheet                 m_checksheet[]
  t_maintenance_execution      t_maintenance_execution[]
  t_maintenance_pm_planning    t_maintenance_pm_planning[]
  t_maintenance_safety_details t_maintenance_safety_details[]
}

model m_origin {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar
  m_vessel m_vessel[]
}

model m_ownership {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar
  m_asset     m_asset[]
  m_warehouse m_warehouse[]
}

model m_pbm_gang {
  id                                                        Int                     @id @default(autoincrement())
  id_mandor                                                 Int?
  id_paltu                                                  Int?
  id_vendor                                                 Int?
  name                                                      String?                 @db.VarChar
  m_vendor_personel_m_pbm_gang_id_mandorTom_vendor_personel m_vendor_personel?      @relation("m_pbm_gang_id_mandorTom_vendor_personel", fields: [id_mandor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_vendor_personel_m_pbm_gang_id_paltuTom_vendor_personel  m_vendor_personel?      @relation("m_pbm_gang_id_paltuTom_vendor_personel", fields: [id_paltu], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user                                                    p_user?                 @relation(fields: [id_vendor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pbm_gang_stevedores                                     m_pbm_gang_stevedores[]
}

model m_pbm_gang_stevedores {
  id                Int                @id @default(autoincrement())
  id_gang           Int?
  id_stevedore      Int?
  m_pbm_gang        m_pbm_gang?        @relation(fields: [id_gang], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_vendor_personel m_vendor_personel? @relation(fields: [id_stevedore], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_pg_personel {
  id                                                                                   Int                               @id @default(autoincrement())
  name                                                                                 String                            @db.VarChar
  id_position                                                                          Int?
  id_unit                                                                              Int?
  nik                                                                                  String?                           @db.VarChar
  phone                                                                                String?                           @db.VarChar
  email                                                                                String?                           @db.VarChar
  id_warehouse_authority                                                               Int?
  id_pg_personel_scope                                                                 Int?
  m_pg_personel_scope                                                                  m_pg_personel_scope?              @relation(fields: [id_pg_personel_scope], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel_position                                                               m_pg_personel_position?           @relation(fields: [id_position], references: [id], onUpdate: SetNull)
  m_pg_personel_unit                                                                   m_pg_personel_unit?               @relation(fields: [id_unit], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_authority                                                                      m_wms_authority?                  @relation(fields: [id_warehouse_authority], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_logsheet_additional_equipment                                                      t_logsheet_additional_equipment[]
  t_logsheet_in_vessel_equipment                                                       t_logsheet_in_vessel_equipment[]
  t_service_request                                                                    t_service_request[]
  t_sharing_knowledge                                                                  t_sharing_knowledge[]
  t_sharing_knowledge_participant                                                      t_sharing_knowledge_participant[]
  t_training_participant                                                               t_training_participant[]
  t_vessel_arrival_logsheet_m_pg_personelTot_vessel_arrival_logsheet_id_foreman_pg     t_vessel_arrival_logsheet[]       @relation("m_pg_personelTot_vessel_arrival_logsheet_id_foreman_pg")
  t_vessel_arrival_logsheet_m_pg_personelTot_vessel_arrival_logsheet_id_operator_panel t_vessel_arrival_logsheet[]       @relation("m_pg_personelTot_vessel_arrival_logsheet_id_operator_panel")
  t_vessel_arrival_timesheet                                                           t_vessel_arrival_timesheet[]
  t_wms_io                                                                             t_wms_io[]
}

model m_pg_personel_position {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  description   String
  m_pg_personel m_pg_personel[]
}

model m_pg_personel_scope {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  m_pg_personel m_pg_personel[]
}

model m_pg_personel_unit {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar
  m_pg_personel         m_pg_personel[]
  t_contract_management t_contract_management[]
}

model m_port {
  id      Int       @id @default(autoincrement())
  name    String
  img     String?
  height  Int?
  m_asset m_asset[]
  m_jetty m_jetty[]
}

model m_port_orde {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  description      String?
  t_vessel_arrival t_vessel_arrival[]
}

model m_productivity_tw {
  id                            Int                             @id(map: "m_productivity_formula_tw_pkey") @default(autoincrement())
  name                          String                          @db.VarChar
  m_productivity_tw_combination m_productivity_tw_combination[]
}

model m_productivity_tw_combination {
  id                 Int                @id @default(autoincrement())
  id_warehouse       Int?
  id_asset           Int?
  id_productivity_tw Int?
  m_asset            m_asset?           @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_productivity_tw  m_productivity_tw? @relation(fields: [id_productivity_tw], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_warehouse        m_warehouse?       @relation(fields: [id_warehouse], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_project_location {
  id                Int                 @id(map: "m_project_area_pkey") @default(autoincrement())
  name              String              @db.VarChar(100)
  created_date      DateTime            @db.Timestamp(6)
  created_by        Int
  updated_date      DateTime?           @db.Timestamp(6)
  updated_by        Int?                @db.SmallInt
  t_service_request t_service_request[]
}

model m_project_work_area {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(100)
  t_project_progress_harian t_project_progress_harian[]
}

model m_route {
  id                                    Int                         @id(map: "m_route_id") @default(autoincrement())
  code                                  String                      @db.VarChar(25)
  id_asset                              Int
  id_warehouse                          Int
  pbm_cost                              Float?
  emkl_cost                             Float?                      @default(0)
  other_cost                            Float?                      @default(0)
  total_cost                            Float?
  id_asset_end                          Int?
  m_asset_m_assetTom_route_id_asset     m_asset                     @relation("m_assetTom_route_id_asset", fields: [id_asset], references: [id], onUpdate: Restrict)
  m_asset_m_assetTom_route_id_asset_end m_asset?                    @relation("m_assetTom_route_id_asset_end", fields: [id_asset_end], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_warehouse                           m_warehouse                 @relation(fields: [id_warehouse], references: [id], onUpdate: Restrict)
  m_liquid_logsheet_routes              m_liquid_logsheet_routes[]
  m_route_compatible_cargos             m_route_compatible_cargos[]
  m_route_conveyors                     m_route_conveyors[]
  t_vessel_arrival_logsheet             t_vessel_arrival_logsheet[]
  t_vessel_cargo                        t_vessel_cargo[]
}

model m_route_compatible_cargos {
  id       Int     @id @default(autoincrement())
  id_route Int
  id_cargo Int
  m_cargo  m_cargo @relation(fields: [id_cargo], references: [id], onUpdate: Restrict)
  m_route  m_route @relation(fields: [id_route], references: [id], onUpdate: Restrict)
}

model m_route_conveyors {
  id       Int     @id(map: "m_route_conveyors_id") @default(autoincrement())
  id_route Int
  id_asset Int
  sequence Int?
  m_asset  m_asset @relation(fields: [id_asset], references: [id], onUpdate: Restrict)
  m_route  m_route @relation(fields: [id_route], references: [id], onUpdate: Restrict)
}

model m_sd_menu {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar
  menu_url       String?          @db.VarChar
  m_sd_menu_role m_sd_menu_role[]
}

model m_sd_menu_role {
  id         Int       @id @default(autoincrement())
  id_sd_menu Int
  id_role    Int
  p_role     p_role    @relation(fields: [id_role], references: [id], onUpdate: Restrict)
  m_sd_menu  m_sd_menu @relation(fields: [id_sd_menu], references: [id], onUpdate: Restrict)
}

model m_signature {
  id        Int     @id @default(autoincrement())
  id_user   Int
  is_active Boolean @default(false)
  file      String  @db.VarChar
  id_role   Int?
  p_role    p_role? @relation(fields: [id_role], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user    p_user  @relation(fields: [id_user], references: [id], onUpdate: Restrict)
}

model m_sr_cost_center {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(250)
  code              String              @db.VarChar(50)
  t_service_request t_service_request[]
}

model m_sr_reason {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(250)
  t_service_request t_service_request[]
}

model m_sr_status {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(250)
  t_service_request_approval t_service_request_approval[]
}

model m_standby_cause {
  id                        Int                         @id
  name                      String
  order_num                 Int
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_status_general {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar
}

model m_surveyor_service {
  id                                 Int                                  @id @default(autoincrement())
  name                               String                               @db.VarChar
  id_unit                            Int
  price                              Float
  id_category                        Int
  m_surveyor_service_category        m_surveyor_service_category          @relation(fields: [id_category], references: [id], onUpdate: Restrict)
  m_surveyor_service_unit            m_surveyor_service_unit              @relation(fields: [id_unit], references: [id], onUpdate: Restrict)
  t_vessel_arrival_surveyor_services t_vessel_arrival_surveyor_services[]
}

model m_surveyor_service_category {
  id                                 Int                                  @id @default(autoincrement())
  name                               String                               @db.VarChar
  m_surveyor_service                 m_surveyor_service[]
  t_vessel_arrival_surveyor_services t_vessel_arrival_surveyor_services[]
}

model m_surveyor_service_unit {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar
  m_surveyor_service m_surveyor_service[]
}

model m_target {
  id             Int   @id @default(autoincrement())
  id_target_type Int?
  target         Float
}

model m_target_cargo {
  id       Int     @id @default(autoincrement())
  id_cargo Int
  target   Int
  year     Int
  m_cargo  m_cargo @relation(fields: [id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_target_type {
  id          Int     @id(map: "m_target__type_pkey") @default(autoincrement())
  name        String  @db.VarChar
  description String? @db.VarChar
}

model m_temp_pressure_indicator {
  id                        Int                         @id @default(autoincrement())
  name                      String
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_training {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar
  vendor     String       @default("") @db.VarChar
  t_training t_training[]
}

model m_trouble {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar
  m_asset_item_troubles     m_asset_item_troubles[]
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_unit {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(25)
  t_monitoring_investasi t_monitoring_investasi[]
}

model m_vendor_personel {
  id                                                                                                    Int                                 @id(map: "m_vendor_personel_id") @default(autoincrement())
  name                                                                                                  String                              @db.VarChar
  no_telp                                                                                               String?                             @db.VarChar
  id_vendor                                                                                             Int?                                @default(10)
  description                                                                                           String?                             @db.VarChar
  kib                                                                                                   String?                             @db.VarChar
  id_vendor_role                                                                                        Int?
  jabatan                                                                                               String?                             @db.VarChar
  p_user                                                                                                p_user?                             @relation(fields: [id_vendor], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vendor_personel_role                                                                                m_vendor_personel_role?             @relation(fields: [id_vendor_role], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_pbm_gang_m_pbm_gang_id_mandorTom_vendor_personel                                                    m_pbm_gang[]                        @relation("m_pbm_gang_id_mandorTom_vendor_personel")
  m_pbm_gang_m_pbm_gang_id_paltuTom_vendor_personel                                                     m_pbm_gang[]                        @relation("m_pbm_gang_id_paltuTom_vendor_personel")
  m_pbm_gang_stevedores                                                                                 m_pbm_gang_stevedores[]
  t_vessel_arrival                                                                                      t_vessel_arrival[]
  t_vessel_arrival_timesheet                                                                            t_vessel_arrival_timesheet[]
  t_vessel_cargo_productivity_hatch_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_checker_pbm t_vessel_cargo_productivity_hatch[] @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_checker_pbm")
  t_vessel_cargo_productivity_hatch_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_foreman_pbm t_vessel_cargo_productivity_hatch[] @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_foreman_pbm")
  t_vessel_cargo_productivity_hatch_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_mandor_pbm  t_vessel_cargo_productivity_hatch[] @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_mandor_pbm")
  t_vessel_cargo_productivity_hatch_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_paltu_pbm   t_vessel_cargo_productivity_hatch[] @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_paltu_pbm")
}

model m_vendor_personel_role {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar
  m_vendor_personel m_vendor_personel[]
}

model m_vessel {
  id                        Int                         @id(map: "m_vessel_id") @default(autoincrement())
  name                      String                      @db.VarChar(100)
  imo                       String?                     @db.VarChar(256)
  built_on                  Int?
  loa                       Decimal                     @db.Decimal
  grt                       Decimal?                    @db.Decimal
  nt                        Decimal?                    @db.Decimal
  dwt                       Decimal?                    @db.Decimal
  depth                     Decimal?                    @db.Decimal
  draught_max               Decimal?                    @db.Decimal
  created_by                Int?
  created_date              DateTime?                   @db.Timestamp(6)
  updated_by                Int?
  updated_date              DateTime?                   @db.Timestamp(6)
  manifold_diameter         Decimal?                    @db.Decimal
  max_pressure              Decimal?                    @db.Decimal
  number_of_tank            Decimal?                    @db.Decimal
  id_vessel_pulledby        Int?
  grab_used_by_jetty        Boolean?                    @default(false)
  draught_before_ld         Float?                      @default(0)
  id_vessel_type            Int?
  coords                    Json?
  id_origin                 Int?
  mmsi                      String?                     @db.VarChar
  draught_summer            Float?
  draught_winter            Float?
  barge_pulledby            String?                     @db.VarChar
  id_region                 Int?                        @default(2)
  m_origin                  m_origin?                   @relation(fields: [id_origin], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel_region           m_vessel_region?            @relation(fields: [id_region], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel                  m_vessel?                   @relation("m_vesselTom_vessel_id_vessel_pulledby", fields: [id_vessel_pulledby], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_vessel_type             m_vessel_type?              @relation(fields: [id_vessel_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  other_m_vessel            m_vessel[]                  @relation("m_vesselTom_vessel_id_vessel_pulledby")
  m_vessel_crane            m_vessel_crane[]
  m_vessel_grab             m_vessel_grab[]
  m_vessel_hatch            m_vessel_hatch[]
  t_maintenance_execution   t_maintenance_execution[]
  t_vessel_arrival          t_vessel_arrival[]
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model m_vessel_crane {
  id                    Int                    @id(map: "m_crane_id") @default(autoincrement())
  crane_number          Decimal?               @db.Decimal
  swl_of_crane          Decimal?               @db.Decimal
  cycle_time_of_crane   Decimal?               @db.Decimal
  id_vessel             Int?
  id_brand              Int?
  created_by            Int?
  created_on            DateTime?              @db.Timestamptz(6)
  updated_by            Int?
  updated_on            DateTime?              @db.Timestamptz(6)
  id_type               Int?
  m_vessel_crane_brands m_vessel_crane_brands? @relation(fields: [id_brand], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel_crane_type   m_vessel_crane_type?   @relation(fields: [id_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_vessel              m_vessel?              @relation(fields: [id_vessel], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model m_vessel_crane_brands {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar
  m_vessel_crane m_vessel_crane[]
}

model m_vessel_crane_type {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar
  m_vessel_crane m_vessel_crane[]
}

model m_vessel_grab {
  id                 Int                 @id @default(autoincrement())
  used_by_jetty      Boolean?            @default(false)
  id_vessel          Int?
  id_type            Int?
  capacity           Float?
  name               String?             @db.VarChar
  m_vessel_grab_type m_vessel_grab_type? @relation(fields: [id_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel           m_vessel?           @relation(fields: [id_vessel], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model m_vessel_grab_type {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  m_vessel_grab m_vessel_grab[]
}

model m_vessel_hatch {
  description                       String?                             @db.VarChar(256)
  id_vessel                         Int?
  id_type                           Int?
  id                                Int                                 @id @default(autoincrement())
  name                              String?                             @db.VarChar
  m_vessel_hatch_type               m_vessel_hatch_type?                @relation(fields: [id_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel                          m_vessel?                           @relation(fields: [id_vessel], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_vessel_arrival_logsheet         t_vessel_arrival_logsheet[]
  t_vessel_arrival_stowage          t_vessel_arrival_stowage[]
  t_vessel_cargo_productivity_hatch t_vessel_cargo_productivity_hatch[]
}

model m_vessel_hatch_type {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar
  m_vessel_hatch m_vessel_hatch[]
}

model m_vessel_region {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar
  m_vessel m_vessel[]
}

model m_vessel_type {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar
  m_vessel m_vessel[]
}

model m_warehouse {
  id                                                 Int                             @id(map: "m_warehouse_id") @default(autoincrement())
  name                                               String                          @db.VarChar(255)
  description                                        String?
  created_date                                       DateTime?                       @db.Timestamp(6)
  created_by                                         Int?
  img_repo                                           String?                         @db.VarChar
  updated_by                                         Int?
  updated_date                                       DateTime?                       @db.Timestamptz(6)
  convert_rule                                       String?                         @default("A") @db.Char
  owner                                              String?
  id_ownership                                       Int?                            @default(1)
  id_wms_authority                                   Int?
  visualization_name                                 String?                         @db.VarChar(25)
  capacity                                           Float                           @default(1000)
  id_warehouse_type                                  Int?
  output                                             Boolean?                        @default(true)
  p_user_m_warehouse_created_byTop_user              p_user?                         @relation("m_warehouse_created_byTop_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "m_warehouse_id_owner_fkey")
  m_ownership                                        m_ownership?                    @relation(fields: [id_ownership], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_warehouse_type                                   m_warehouse_type?               @relation(fields: [id_warehouse_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_authority                                    m_wms_authority?                @relation(fields: [id_wms_authority], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_m_warehouse_updated_byTop_user              p_user?                         @relation("m_warehouse_updated_byTop_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_productivity_tw_combination                      m_productivity_tw_combination[]
  m_route                                            m_route[]
  m_warehouse_cargo                                  m_warehouse_cargo[]
  m_wms_pillars                                      m_wms_pillars[]
  t_vessel_cargo                                     t_vessel_cargo[]
  t_vessel_cargo_productivity                        t_vessel_cargo_productivity[]
  t_wms_io_m_warehouseTot_wms_io_id_warehouse_input  t_wms_io[]                      @relation("m_warehouseTot_wms_io_id_warehouse_input")
  t_wms_io_m_warehouseTot_wms_io_id_warehouse_output t_wms_io[]                      @relation("m_warehouseTot_wms_io_id_warehouse_output")
}

model m_warehouse_cargo {
  id           Int          @id(map: "m_warehouse_cargo_id") @default(autoincrement())
  id_warehouse Int?
  id_cargo     Int?
  m_cargo      m_cargo?     @relation(fields: [id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_warehouse  m_warehouse? @relation(fields: [id_warehouse], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_warehouse_type {
  id          Int           @id @default(autoincrement())
  name        String        @default("") @db.VarChar(8)
  m_warehouse m_warehouse[]
}

model m_wms_authority {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  m_pg_personel m_pg_personel[]
  m_warehouse   m_warehouse[]
  p_user        p_user[]
}

model m_wms_nopol {
  id                Int               @id @default(autoincrement())
  transportir_id    Int
  nopol             String            @db.VarChar(255)
  driver            String            @db.VarChar(255)
  no_kb             String            @db.VarChar
  m_wms_transportir m_wms_transportir @relation(fields: [transportir_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_wms_io          t_wms_io[]
}

model m_wms_pillars {
  id                                      Int                   @id(map: "m_pillars_pkey") @default(autoincrement())
  code                                    Int
  id_warehouse                            Int
  capacity                                Float
  description                             String?
  current_id_cargo                        Int?
  tonnage                                 Float?
  tonnage_convert                         Float?
  created_by                              Int
  created_date                            DateTime              @db.Timestamp(6)
  updated_by                              Int
  updated_date                            DateTime              @db.Timestamp(6)
  p_user_m_wms_pillars_created_byTop_user p_user                @relation("m_wms_pillars_created_byTop_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo                                 m_cargo?              @relation(fields: [current_id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_warehouse                             m_warehouse           @relation(fields: [id_warehouse], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_m_wms_pillars_updated_byTop_user p_user                @relation("m_wms_pillars_updated_byTop_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_pillars_cargo                     m_wms_pillars_cargo[]
}

model m_wms_pillars_cargo {
  id               Int           @id @default(autoincrement())
  id_wms_pillars   Int
  current_id_cargo Int
  tonnage          Float
  tonnage_convert  Float?
  created_date     DateTime?     @db.Timestamp(6)
  m_cargo          m_cargo       @relation(fields: [current_id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_pillars    m_wms_pillars @relation(fields: [id_wms_pillars], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model m_wms_transportir {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  m_wms_nopol m_wms_nopol[]
  t_wms_io    t_wms_io[]
}

model m_work_center {
  id                        Int                         @id(map: "m_work_center_id") @default(autoincrement())
  name                      String                      @db.VarChar
  description               String?                     @db.VarChar
  m_asset_items             m_asset_items[]
  t_asset_maintenance       t_asset_maintenance[]
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet[]
}

model p_kpi_role {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  m_kpi_assignment m_kpi_assignment[]
  p_user           p_user[]
}

model p_role {
  id                                                       Int               @id @default(autoincrement())
  name                                                     String            @db.VarChar
  is_internal_pg                                           Boolean?          @default(false)
  description                                              String?
  file_user_guide                                          String?           @db.VarChar
  m_document_type_m_document_type_id_approver_roleTop_role m_document_type[] @relation("m_document_type_id_approver_roleTop_role")
  m_document_type_m_document_type_id_uploader_roleTop_role m_document_type[] @relation("m_document_type_id_uploader_roleTop_role")
  m_sd_menu_role                                           m_sd_menu_role[]
  m_signature                                              m_signature[]
  p_user                                                   p_user[]
  t_notif                                                  t_notif[]
}

model p_user {
  id                                                                          Int                               @id(map: "p_user_id") @default(autoincrement())
  email                                                                       String                            @db.VarChar(255)
  username                                                                    String                            @db.VarChar(255)
  password                                                                    String                            @db.VarChar
  last_login                                                                  DateTime?                         @db.Timestamp(6)
  is_deleted                                                                  Boolean?
  display_name                                                                String?                           @db.VarChar
  id_role                                                                     Int                               @default(-1)
  address                                                                     String?
  id_kpi_role                                                                 Int?
  id_wms_authority                                                            Int?
  har                                                                         String?
  scope                                                                       String?
  alat                                                                        String?
  p_kpi_role                                                                  p_kpi_role?                       @relation(fields: [id_kpi_role], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_role                                                                      p_role                            @relation(fields: [id_role], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_authority                                                             m_wms_authority?                  @relation(fields: [id_wms_authority], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo_owner                                                               m_cargo_owner[]
  m_checksheet                                                                m_checksheet[]
  m_checksheet_asset_m_checksheet_asset_created_byTop_user                    m_checksheet_asset[]              @relation("m_checksheet_asset_created_byTop_user")
  m_checksheet_asset_m_checksheet_asset_updated_byTop_user                    m_checksheet_asset[]              @relation("m_checksheet_asset_updated_byTop_user")
  m_checksheet_equipment                                                      m_checksheet_equipment[]
  m_housekeeping_asset                                                        m_housekeeping_asset[]
  m_kpi_personel_tree_m_kpi_personel_tree_id_childTop_user                    m_kpi_personel_tree[]             @relation("m_kpi_personel_tree_id_childTop_user")
  m_kpi_personel_tree_m_kpi_personel_tree_id_parentTop_user                   m_kpi_personel_tree[]             @relation("m_kpi_personel_tree_id_parentTop_user")
  m_pbm_gang                                                                  m_pbm_gang[]
  m_signature                                                                 m_signature[]
  m_vendor_personel                                                           m_vendor_personel[]
  m_warehouse_m_warehouse_created_byTop_user                                  m_warehouse[]                     @relation("m_warehouse_created_byTop_user")
  m_warehouse_m_warehouse_updated_byTop_user                                  m_warehouse[]                     @relation("m_warehouse_updated_byTop_user")
  m_wms_pillars_m_wms_pillars_created_byTop_user                              m_wms_pillars[]                   @relation("m_wms_pillars_created_byTop_user")
  m_wms_pillars_m_wms_pillars_updated_byTop_user                              m_wms_pillars[]                   @relation("m_wms_pillars_updated_byTop_user")
  t_bariksama                                                                 t_bariksama[]
  t_checksheet                                                                t_checksheet[]
  t_contract_management                                                       t_contract_management[]
  t_housekeeping_p_userTot_housekeeping_created_by                            t_housekeeping[]                  @relation("p_userTot_housekeeping_created_by")
  t_housekeeping_p_userTot_housekeeping_updated_by                            t_housekeeping[]                  @relation("p_userTot_housekeeping_updated_by")
  t_housekeeping_complain_p_userTot_housekeeping_complain_company             t_housekeeping_complain[]         @relation("p_userTot_housekeeping_complain_company")
  t_housekeeping_complain_p_userTot_housekeeping_complain_created_by          t_housekeeping_complain[]         @relation("p_userTot_housekeeping_complain_created_by")
  t_input_checklist                                                           t_input_checklist[]
  t_kpi_manual_personel                                                       t_kpi_manual_personel[]
  t_maintenance_execution_p_userTot_maintenance_execution_created_by          t_maintenance_execution[]         @relation("p_userTot_maintenance_execution_created_by")
  t_maintenance_execution_p_userTot_maintenance_execution_id_user             t_maintenance_execution[]         @relation("p_userTot_maintenance_execution_id_user")
  t_maintenance_lubricant_p_userTot_maintenance_lubricant_created_by          t_maintenance_lubricant[]         @relation("p_userTot_maintenance_lubricant_created_by")
  t_maintenance_lubricant_p_userTot_maintenance_lubricant_updated_by          t_maintenance_lubricant[]         @relation("p_userTot_maintenance_lubricant_updated_by")
  t_monitoring_investasi                                                      t_monitoring_investasi[]
  t_notif                                                                     t_notif[]
  t_project_document                                                          t_project_document[]
  t_project_progress_harian_p_userTot_project_progress_harian_created_by      t_project_progress_harian[]       @relation("p_userTot_project_progress_harian_created_by")
  t_project_progress_harian_p_userTot_project_progress_harian_updated_by      t_project_progress_harian[]       @relation("p_userTot_project_progress_harian_updated_by")
  t_project_progress_planning                                                 t_project_progress_planning[]
  t_project_subtask_p_userTot_project_subtask_created_by                      t_project_subtask[]               @relation("p_userTot_project_subtask_created_by")
  t_project_subtask_p_userTot_project_subtask_updated_by                      t_project_subtask[]               @relation("p_userTot_project_subtask_updated_by")
  t_project_task_p_userTot_project_task_created_by                            t_project_task[]                  @relation("p_userTot_project_task_created_by")
  t_project_task_p_userTot_project_task_updated_by                            t_project_task[]                  @relation("p_userTot_project_task_updated_by")
  t_service_request_p_userTot_service_request_created_by                      t_service_request[]               @relation("p_userTot_service_request_created_by")
  t_service_request_p_userTot_service_request_main_contractor                 t_service_request[]               @relation("p_userTot_service_request_main_contractor")
  t_service_request_p_userTot_service_request_sub_contractor                  t_service_request[]               @relation("p_userTot_service_request_sub_contractor")
  t_service_request_approval                                                  t_service_request_approval[]
  t_service_request_details_p_userTot_service_request_details_main_contractor t_service_request_details[]       @relation("p_userTot_service_request_details_main_contractor")
  t_service_request_details_p_userTot_service_request_details_sub_contractor  t_service_request_details[]       @relation("p_userTot_service_request_details_sub_contractor")
  t_vessel_arrival_p_userTot_vessel_arrival_id_pbm                            t_vessel_arrival[]                @relation("p_userTot_vessel_arrival_id_pbm")
  t_vessel_arrival_p_userTot_vessel_arrival_id_shipping_agency                t_vessel_arrival[]                @relation("p_userTot_vessel_arrival_id_shipping_agency")
  t_vessel_arrival_p_userTot_vessel_arrival_id_surveyor                       t_vessel_arrival[]                @relation("p_userTot_vessel_arrival_id_surveyor")
  t_vessel_arrival_approval_notes                                             t_vessel_arrival_approval_notes[]
  t_vessel_arrival_emkl                                                       t_vessel_arrival_emkl[]
  t_vessel_arrival_logsheet_p_userTot_vessel_arrival_logsheet_id_user         t_vessel_arrival_logsheet[]       @relation("p_userTot_vessel_arrival_logsheet_id_user")
  t_vessel_arrival_logsheet_p_userTot_vessel_arrival_logsheet_id_user_end     t_vessel_arrival_logsheet[]       @relation("p_userTot_vessel_arrival_logsheet_id_user_end")
  t_vessel_arrival_logsheet_p_userTot_vessel_arrival_logsheet_updated_by      t_vessel_arrival_logsheet[]       @relation("p_userTot_vessel_arrival_logsheet_updated_by")
  t_vessel_cargo_productivity_p_userTot_vessel_cargo_productivity_id_emkl     t_vessel_cargo_productivity[]     @relation("p_userTot_vessel_cargo_productivity_id_emkl")
  t_vessel_cargo_productivity_p_userTot_vessel_cargo_productivity_id_pbm      t_vessel_cargo_productivity[]     @relation("p_userTot_vessel_cargo_productivity_id_pbm")
  t_vessel_cargo_productivity_p_userTot_vessel_cargo_productivity_id_wasbm    t_vessel_cargo_productivity[]     @relation("p_userTot_vessel_cargo_productivity_id_wasbm")
  t_wms_io_p_userTot_wms_io_created_by                                        t_wms_io[]                        @relation("p_userTot_wms_io_created_by")
  t_wms_io_p_userTot_wms_io_updated_by                                        t_wms_io[]                        @relation("p_userTot_wms_io_updated_by")
}

model t_ais_document {
  id                 Int       @id @default(autoincrement())
  file_tidal         String    @db.VarChar
  file_wind_currents String    @db.VarChar
  created_at         DateTime? @db.Timestamptz(6)
  created_by         Int?
  updated_at         DateTime? @db.Timestamptz(6)
  updated_by         Int?
  year               Int
  month              String    @db.VarChar
  month_number       Int?
}

model t_asset_maintenance {
  id                        Int                         @id @default(autoincrement())
  id_asset                  Int?
  time_start                DateTime?                   @db.Timestamp(6)
  time_finish               DateTime?                   @db.Timestamp(6)
  description               String?
  id_area                   Int?
  id_work_center            Int?
  duration                  Int?
  status                    String?                     @db.VarChar
  m_area                    m_area?                     @relation(fields: [id_area], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset                   m_asset?                    @relation(fields: [id_asset], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_work_center             m_work_center?              @relation(fields: [id_work_center], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_asset_maintenance_items t_asset_maintenance_items[]
}

model t_asset_maintenance_items {
  id                  Int                 @id @default(autoincrement())
  id_maintenance      Int
  id_item             Int
  m_asset_items       m_asset_items       @relation(fields: [id_item], references: [id], onUpdate: Restrict)
  t_asset_maintenance t_asset_maintenance @relation(fields: [id_maintenance], references: [id], onUpdate: Restrict)
}

model t_au_breakdown_planning {
  id       Int      @id @default(autoincrement())
  id_asset Int
  target   Float
  period   DateTime @db.Date
  m_asset  m_asset  @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_au_discharging_planning {
  id       Int     @id @default(autoincrement())
  id_asset Int
  target   Float
  year     Int     @default(2021)
  m_asset  m_asset @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_au_running_planning {
  id       Int      @id @default(autoincrement())
  id_asset Int
  target   Float
  period   DateTime @db.Date
  m_asset  m_asset  @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_bariksama {
  id               Int              @id @default(autoincrement())
  id_arrival       Int
  id_vendor        Int
  file             String?          @db.VarChar
  created_at       DateTime?        @db.Timestamptz(6)
  created_by       Int?
  updated_at       DateTime?        @db.Timestamptz(6)
  updated_by       Int?
  is_approve       Boolean          @default(false)
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user           p_user           @relation(fields: [id_vendor], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_bor {
  id                   Int           @id @default(autoincrement())
  id_jetty_part        Int
  length               Float         @default(0)
  vessel_count         Int           @default(0)
  vessel_total_length  Float         @default(0)
  vessel_length_mean   Float         @default(0)
  berth_duration_total Float         @default(0)
  berth_duration_mean  Float         @default(0)
  occupancy            Float         @default(0)
  bor                  Float         @default(0)
  period_start         DateTime      @db.Date
  period_end           DateTime      @db.Date
  vessel               Json?
  m_jetty_parts        m_jetty_parts @relation(fields: [id_jetty_part], references: [id], onUpdate: Restrict)
}

model t_checksheet {
  id                       Int                      @id @default(autoincrement())
  name                     String                   @db.VarChar
  date                     DateTime                 @db.Date
  created_by               Int
  created_date             DateTime                 @db.Timestamp(6)
  updated_by               Int?
  updated_date             DateTime?                @db.Timestamp(6)
  id_maintenance_execution Int?
  id_m_checksheet          Int?
  condition                String?                  @db.VarChar
  no_wo                    String?                  @db.VarChar
  m_checksheet             m_checksheet?            @relation(fields: [id_m_checksheet], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_maintenance_execution  t_maintenance_execution? @relation(fields: [id_maintenance_execution], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user                   p_user?                  @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_checksheet_details     t_checksheet_details[]
}

model t_checksheet_details {
  id                                                                         Int                    @id @default(autoincrement())
  id_checksheet                                                              Int
  id_checksheet_parameter                                                    Int
  condition_is_fine                                                          Boolean?
  condition_description                                                      String?
  note                                                                       String?
  pic_filler                                                                 Int
  pic_approver                                                               Int?
  shift                                                                      Int?
  created_by                                                                 Int
  created_date                                                               DateTime               @db.Timestamp(6)
  updated_by                                                                 Int
  updated_date                                                               DateTime               @db.Timestamp(6)
  good_condition_total                                                       Int?
  bad_condition_total                                                        Int?
  actual                                                                     String?
  condition                                                                  String?
  standart                                                                   String?
  file                                                                       String?                @db.VarChar
  is_not_inspected                                                           Boolean?
  is_cleaning                                                                Boolean?
  is_action                                                                  Boolean?
  condition_total                                                            Int?                   @default(1)
  in                                                                         Decimal?               @db.Decimal(20, 2)
  out                                                                        Decimal?               @db.Decimal(20, 2)
  contact                                                                    String?
  tegangan                                                                   Int?
  rusak                                                                      Boolean?
  kosong                                                                     Boolean?
  is_condition                                                               Int?
  id_is_cleaning                                                             Int?
  rusak_total                                                                Int?
  kosong_total                                                               Int?
  is_actual                                                                  Boolean?
  id_actual                                                                  Int?
  id_value                                                                   Int?
  good_condition                                                             String?
  bad_condition                                                              String?
  is_final                                                                   Boolean?
  t_checksheet                                                               t_checksheet           @relation(fields: [id_checksheet], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet_parameter                                                     m_checksheet_parameter @relation(fields: [id_checksheet_parameter], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet_action                                                        m_checksheet_action?   @relation(fields: [is_condition], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_checksheet_filler_m_checksheet_fillerTot_checksheet_details_pic_approver m_checksheet_filler?   @relation("m_checksheet_fillerTot_checksheet_details_pic_approver", fields: [pic_approver], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_checksheet_filler_m_checksheet_fillerTot_checksheet_details_pic_filler   m_checksheet_filler    @relation("m_checksheet_fillerTot_checksheet_details_pic_filler", fields: [pic_filler], references: [id], onUpdate: Restrict)
}

model t_contract_management {
  id                         Int                         @id @default(autoincrement())
  title                      String                      @db.VarChar(255)
  contract_number            String?                     @db.VarChar(255)
  pic                        Int
  start_date                 DateTime                    @db.Timestamptz(6)
  end_date                   DateTime                    @db.Timestamptz(6)
  file                       String?                     @db.VarChar(255)
  status                     Int?
  notes                      String?                     @db.VarChar(255)
  extention_date             DateTime?                   @db.Timestamptz(6)
  hard_file_pic              Int?
  type                       Int
  id_asset                   Int?
  id_contract_type           Int?
  m_pg_personel_unit         m_pg_personel_unit?         @relation(fields: [hard_file_pic], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                    m_asset?                    @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_contract_type            m_contract_type?            @relation(fields: [id_contract_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user                     p_user                      @relation(fields: [pic], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_contract_status          m_contract_status?          @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_contract_management_type m_contract_management_type  @relation(fields: [type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_service_request          t_service_request[]
  t_service_request_details  t_service_request_details[]
}

model t_discharging_rate_planning_a {
  id       Int       @id(map: "t_kpi_discharging_rate_pkey") @default(autoincrement())
  id_asset Int
  kpi      Int
  period   DateTime? @db.Date
  m_asset  m_asset   @relation(fields: [id_asset], references: [id], onUpdate: Restrict, map: "t_kpi_discharging_rate_id_asset_fkey")
}

model t_ews {
  id        Int       @id @default(autoincrement())
  mmsi      Int
  ship_name String    @db.VarChar
  msg       String?   @db.VarChar
  time      DateTime? @db.Timestamptz(6)
}

model t_housekeeping {
  id                                       Int                        @id @default(autoincrement())
  vessel_arrival_id                        Int
  status                                   Int?
  penilaian_kebersihan                     Float?
  keterangan_waktu                         Int?
  created_at                               DateTime?                  @db.Timestamp(6)
  created_by                               Int?
  tarif                                    Int?
  updated_at                               DateTime?                  @db.Timestamp(6)
  updated_by                               Int?
  p_user_p_userTot_housekeeping_created_by p_user?                    @relation("p_userTot_housekeeping_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_housekeeping_status                    m_housekeeping_status?     @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_housekeeping_payrate                   m_housekeeping_payrate?    @relation(fields: [tarif], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_housekeeping_updated_by p_user?                    @relation("p_userTot_housekeeping_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival                         t_vessel_arrival           @relation(fields: [vessel_arrival_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_housekeeping_checklist                 t_housekeeping_checklist[]
  t_housekeeping_item                      t_housekeeping_item[]
}

model t_housekeeping_asset {
  id      Int     @id @default(autoincrement())
  asset   Int     @db.SmallInt
  m_asset m_asset @relation(fields: [asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_housekeeping_checklist {
  id                            Int                             @id @default(autoincrement())
  asset_id                      Int
  group_id                      Int?
  worker                        Int?
  housekeeping_id               Int
  notes                         String                          @db.VarChar(250)
  penilaian                     Float?
  payrate_id                    Int?
  proggres                      Int?
  m_asset                       m_asset                         @relation(fields: [asset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_housekeeping_group          m_housekeeping_group?           @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_housekeeping_checklist_group_fkey")
  t_housekeeping                t_housekeeping                  @relation(fields: [housekeeping_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_housekeeping_payrate        m_housekeeping_payrate?         @relation(fields: [payrate_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_housekeeping_checklist_id_payrate_fkey")
  t_housekeeping_checklist_item t_housekeeping_checklist_item[]
}

model t_housekeeping_checklist_item {
  id                       Int                      @id @default(autoincrement())
  cheklist_id              Int
  status                   Int
  file_sebelum             String?                  @db.VarChar(255)
  penilaian_kebersihan     Int?
  file_sesudah             String?                  @db.VarChar(255)
  asset_items_id           Int
  m_asset_items            m_asset_items            @relation(fields: [asset_items_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_housekeeping_checklist t_housekeeping_checklist @relation(fields: [cheklist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_housekeeping_status    m_housekeeping_status    @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_housekeeping_complain {
  id                                                Int      @id @default(autoincrement())
  company                                           Int
  on_progress                                       Int
  not_done                                          Int
  date_reported                                     DateTime @db.Timestamp(6)
  notes                                             String   @db.VarChar(255)
  date_start                                        DateTime @db.Timestamp(6)
  date_end                                          DateTime @db.Timestamp(6)
  photo                                             String   @db.VarChar(255)
  created_at                                        DateTime @db.Timestamp(6)
  created_by                                        Int
  photo2                                            String?  @db.VarChar(255)
  photo3                                            String?  @db.VarChar(255)
  p_user_p_userTot_housekeeping_complain_company    p_user   @relation("p_userTot_housekeeping_complain_company", fields: [company], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_housekeeping_complain_created_by p_user   @relation("p_userTot_housekeeping_complain_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_housekeeping_item {
  id              Int            @id @default(autoincrement())
  item            Int
  housekeeping_id Int
  t_housekeeping  t_housekeeping @relation(fields: [housekeeping_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_housekeeping_item_id_houskeeping_fkey")
  m_asset         m_asset        @relation(fields: [item], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_input_checklist {
  id                     Int              @id @default(autoincrement())
  id_vessel_arrival      Int
  id_user                Int
  checker_pihak          String           @db.VarChar
  hopper_comment         String?
  terpaulin_comment      String?
  sling_shackle_comment  String?
  cargo_on_hatch_comment String?
  shift                  Int
  created_date           DateTime         @db.Timestamp(6)
  hopper                 Boolean
  terpaulin              Boolean
  sling_shackle          Boolean
  cargo_on_hatch         Boolean
  created_by             String?          @db.VarChar
  updated_by             String?          @db.VarChar
  p_user                 p_user           @relation(fields: [id_user], references: [id], onUpdate: Restrict)
  t_vessel_arrival       t_vessel_arrival @relation(fields: [id_vessel_arrival], references: [id], onUpdate: Restrict)
}

model t_kpi_manual_personel {
  id                  Int                 @id @default(autoincrement())
  id_user             Int
  id_kpi              Int
  id_kpi_manual_input Int?
  output              String?             @db.VarChar
  m_kpi               m_kpi               @relation(fields: [id_kpi], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_kpi_manual_input  m_kpi_manual_input? @relation(fields: [id_kpi_manual_input], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user              p_user              @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_kpi_result {
  id         Int        @id @default(autoincrement())
  id_user    Int
  id_kpi     Int
  result     Int?
  date       DateTime?  @default(now()) @db.Date
  weight     Float?
  id_kpi_run Int?
  output     String?    @db.VarChar
  m_kpi      m_kpi      @relation(fields: [id_kpi], references: [id], onUpdate: Restrict)
  t_kpi_run  t_kpi_run? @relation(fields: [id_kpi_run], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model t_kpi_run {
  id           Int            @id @default(autoincrement())
  type         String?
  date         DateTime       @default(now()) @db.Timestamp(6)
  from         DateTime       @db.Date
  to           DateTime       @db.Date
  status       String?        @default("processing")
  t_kpi_result t_kpi_result[]
}

model t_logsheet_additional_equipment {
  id               Int               @id @default(autoincrement())
  id_activity      Int
  start_time       DateTime          @db.Timestamp(6)
  end_time         DateTime          @db.Timestamp(6)
  shift            Int
  id_pg_personel   Int
  id_asset         Int
  id_arrival       Int?
  created_by       Int
  created_date     DateTime          @db.Timestamp(6)
  updated_by       Int
  updated_date     DateTime          @db.Timestamp(6)
  m_activity       m_activity        @relation(fields: [id_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival t_vessel_arrival? @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset          m_asset           @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel    m_pg_personel     @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_logsheet_in_vessel_equipment {
  id               Int              @id @default(autoincrement())
  id_activity      Int
  start_time       DateTime         @db.Timestamp(6)
  end_time         DateTime         @db.Timestamp(6)
  shift            Int
  id_pg_personel   Int
  id_asset         Int
  id_arrival       Int
  created_by       Int
  created_date     DateTime         @db.Timestamp(6)
  updated_by       Int
  updated_date     DateTime         @db.Timestamp(6)
  m_activity       m_activity       @relation(fields: [id_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset          m_asset          @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel    m_pg_personel    @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance {
  id                    Int                     @id @default(autoincrement())
  date                  DateTime                @db.Date
  contractor            String                  @db.VarChar
  created_by            Int?
  created_date          DateTime?               @db.Timestamp(6)
  updated_by            Int?
  updated_date          DateTime?               @db.Timestamp(6)
  type                  String                  @default("pm") @db.VarChar
  asset_type            String                  @default("csu") @db.VarChar
  t_maintenance_details t_maintenance_details[]
}

model t_maintenance_details {
  id                          Int                           @id @default(autoincrement())
  id_maintenance              Int
  id_asset                    Int
  id_maintenance_area         Int
  condition                   String?
  recommendation              String?
  date_plan                   DateTime                      @db.Timestamp(6)
  date_realization            DateTime                      @db.Timestamp(6)
  pmo_wo                      String?                       @db.VarChar
  date_found                  Int?
  date_first_found            Int?
  id_activity                 Int
  remarks                     String?
  start_time                  DateTime?                     @db.Timestamp(6)
  end_time                    DateTime?                     @db.Timestamp(6)
  id_lubricant_type           Int?
  lubricant_consumption       Float?
  status                      Int                           @default(0) @db.SmallInt
  id_user_executor            Int?
  scope                       Int                           @db.SmallInt
  m_activity                  m_activity                    @relation(fields: [id_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                     m_asset                       @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance               t_maintenance                 @relation(fields: [id_maintenance], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_area          m_maintenance_area            @relation(fields: [id_maintenance_area], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance_details_items t_maintenance_details_items[]
  t_maintenance_photos        t_maintenance_photos[]
}

model t_maintenance_details_items {
  id                    Int                   @id @default(autoincrement())
  id_maintenance_detail Int
  id_asset_item         Int
  m_asset_items         m_asset_items         @relation(fields: [id_asset_item], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance_details t_maintenance_details @relation(fields: [id_maintenance_detail], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_execution {
  id                                                Int                                  @id @default(autoincrement())
  id_pm_planning                                    Int?
  type                                              String                               @db.VarChar
  id_scope                                          Int
  id_item                                           Int
  description                                       String?
  id_material                                       Int?
  material_description                              String?
  date                                              DateTime                             @db.Date
  start_time                                        DateTime?                            @db.Timestamp(6)
  finish_time                                       DateTime?                            @db.Timestamp(6)
  order_no                                          String?                              @db.VarChar
  created_by                                        Int?
  created_date                                      DateTime                             @db.Timestamp(6)
  updated_by                                        Int?
  updated_date                                      DateTime                             @db.Timestamp(6)
  id_equipment                                      Int
  id_user                                           Int?
  execution_date                                    DateTime?                            @db.Timestamp(6)
  id_execution_condition                            Int?                                 @default(2)
  id_vessel                                         Int?
  p_user_p_userTot_maintenance_execution_created_by p_user?                              @relation("p_userTot_maintenance_execution_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_equipment                           m_maintenance_equipment              @relation(fields: [id_equipment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance_execution_condition                 t_maintenance_execution_condition?   @relation(fields: [id_execution_condition], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_items                               m_maintenance_items                  @relation(fields: [id_item], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_materials                           m_maintenance_materials?             @relation(fields: [id_material], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance_pm_planning                         t_maintenance_pm_planning?           @relation(fields: [id_pm_planning], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_scope                               m_maintenance_scope                  @relation(fields: [id_scope], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_maintenance_execution_id_user    p_user?                              @relation("p_userTot_maintenance_execution_id_user", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel                                          m_vessel?                            @relation(fields: [id_vessel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_checksheet                                      t_checksheet[]
  t_maintenance_execution_cm_details                t_maintenance_execution_cm_details[]
  t_maintenance_execution_manpower                  t_maintenance_execution_manpower[]
  t_maintenance_execution_photos                    t_maintenance_execution_photos[]
  t_maintenance_materials                           t_maintenance_materials[]
}

model t_maintenance_execution_cm_details {
  id                       Int                     @id(map: "cm_execution_attachment_pkey") @default(autoincrement())
  id_maintenance_execution Int
  condition_before_file    String                  @db.VarChar(255)
  condition_before_desc    String                  @db.VarChar(255)
  condition_after_file     String                  @db.VarChar(255)
  condition_after_desc     String                  @db.VarChar(255)
  t_maintenance_execution  t_maintenance_execution @relation(fields: [id_maintenance_execution], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cm_execution_attachment_id_maintenance_execution_fkey")
}

model t_maintenance_execution_condition {
  id                      Int                       @id @default(autoincrement())
  name                    String?                   @db.VarChar
  description             String?                   @db.VarChar
  m_checksheet            m_checksheet[]
  t_maintenance_execution t_maintenance_execution[]
}

model t_maintenance_execution_manpower {
  id                      Int                     @id @default(autoincrement())
  name                    String                  @db.VarChar
  id_execution            Int
  execution_date          DateTime?               @db.Timestamp(6)
  t_maintenance_execution t_maintenance_execution @relation(fields: [id_execution], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_execution_photos {
  id                      Int                     @id @default(autoincrement())
  file                    String                  @db.VarChar
  id_execution            Int
  caption                 String?
  t_maintenance_execution t_maintenance_execution @relation(fields: [id_execution], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_lubricant {
  id                                                Int                     @id @default(autoincrement())
  id_asset                                          Int
  id_lubricant                                      Int
  created_by                                        Int
  created_date                                      DateTime                @db.Timestamp(6)
  updated_by                                        Int
  updated_date                                      DateTime                @db.Timestamp(6)
  lubricant_consumption                             Float?                  @default(0)
  date                                              DateTime?               @db.Date
  p_user_p_userTot_maintenance_lubricant_created_by p_user                  @relation("p_userTot_maintenance_lubricant_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                                           m_asset                 @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_lubricant                           m_maintenance_lubricant @relation(fields: [id_lubricant], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_maintenance_lubricant_updated_by p_user                  @relation("p_userTot_maintenance_lubricant_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_materials {
  id                       Int                      @id @default(autoincrement())
  id_maintenance_execution Int?
  id_material              Int?
  qty                      Float?
  t_maintenance_execution  t_maintenance_execution? @relation(fields: [id_maintenance_execution], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_materials  m_maintenance_materials? @relation(fields: [id_material], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_photos {
  id                    Int                   @id @default(autoincrement())
  file_img              String                @db.VarChar
  type                  String                @db.VarChar
  id_maintenance_detail Int
  t_maintenance_details t_maintenance_details @relation(fields: [id_maintenance_detail], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_maintenance_pm_planning {
  id                      Int                       @id @default(autoincrement())
  id_scope                Int
  id_item                 Int
  interval                Int
  description             String
  created_by              Int
  created_date            DateTime                  @db.Timestamp(6)
  updated_by              Int
  updated_date            DateTime                  @db.Timestamp(6)
  start_date              DateTime                  @db.Timestamp(6)
  finish_date             DateTime                  @db.Timestamp(6)
  id_equipment            Int
  repetitive              Boolean                   @default(false)
  duration                Int?
  m_maintenance_equipment m_maintenance_equipment   @relation(fields: [id_equipment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_items     m_maintenance_items       @relation(fields: [id_item], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_scope     m_maintenance_scope       @relation(fields: [id_scope], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_maintenance_execution t_maintenance_execution[]
}

model t_maintenance_safety {
  id                           Int                            @id @default(autoincrement())
  name                         String                         @db.VarChar
  date                         DateTime                       @db.Date
  description                  String?
  created_by                   Int
  created_date                 DateTime                       @db.Timestamp(6)
  updated_by                   Int
  updated_date                 DateTime                       @db.Timestamp(6)
  type                         String                         @db.VarChar
  t_maintenance_safety_details t_maintenance_safety_details[]
}

model t_maintenance_safety_details {
  id                                                                                                                  Int                            @id @default(autoincrement())
  id_safety_category_before                                                                                           Int
  id_safety_jetty_before                                                                                              Int
  condition_before                                                                                                    String
  img_before                                                                                                          String                         @db.VarChar
  id_safety_category_after                                                                                            Int?
  id_safety_jetty_after                                                                                               Int?
  condition_after                                                                                                     String?
  img_after                                                                                                           String?                        @db.VarChar
  id_maintenance_safety                                                                                               Int
  created_by                                                                                                          Int
  created_date                                                                                                        DateTime                       @db.Timestamp(6)
  updated_by                                                                                                          Int
  updated_date                                                                                                        DateTime                       @db.Timestamp(6)
  id_status_general                                                                                                   Int?                           @default(1)
  id_maintenance_scope                                                                                                Int?
  order_no                                                                                                            String?                        @db.VarChar
  t_maintenance_safety                                                                                                t_maintenance_safety           @relation(fields: [id_maintenance_safety], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_scope                                                                                                 m_maintenance_scope?           @relation(fields: [id_maintenance_scope], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_safety_category_m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_after  m_maintenance_safety_category? @relation("m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_after", fields: [id_safety_category_after], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_safety_category_m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_before m_maintenance_safety_category  @relation("m_maintenance_safety_categoryTot_maintenance_safety_details_id_safety_category_before", fields: [id_safety_category_before], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_safety_jetty_m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_after           m_maintenance_safety_jetty?    @relation("m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_after", fields: [id_safety_jetty_after], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_maintenance_safety_jetty_m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_before          m_maintenance_safety_jetty     @relation("m_maintenance_safety_jettyTot_maintenance_safety_details_id_safety_jetty_before", fields: [id_safety_jetty_before], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_monitoring_investasi {
  id                  Int       @id @default(autoincrement())
  barang              String    @db.VarChar(255)
  quantity            Int
  satuan              Int
  mr_plan_date        DateTime? @db.Timestamptz(6)
  mr_realization_date DateTime? @db.Timestamptz(6)
  pr_plan_date        DateTime? @db.Timestamptz(6)
  pr_realization_date DateTime? @db.Timestamptz(6)
  po_plan_date        DateTime? @db.Timestamptz(6)
  po_realization_date DateTime? @db.Timestamptz(6)
  ba_plan_date        DateTime? @db.Timestamptz(6)
  ba_realization_date DateTime? @db.Timestamptz(6)
  marine_traffic_url  String?   @db.VarChar
  created_at          DateTime  @db.Timestamptz(6)
  updated_at          DateTime  @db.Timestamptz(6)
  created_by          Int       @db.SmallInt
  p_user              p_user    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_unit              m_unit    @relation(fields: [satuan], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_notif {
  id       Int       @id(map: "notif_pkey") @default(autoincrement())
  message  String?
  date     DateTime? @default(now()) @db.Timestamp(6)
  type     String?   @default("operator") @db.VarChar
  url_path String?   @default("/Pages/Transactions/Vessel/Realization/AssetBreakdown") @db.VarChar
  id_role  Int?
  id_user  Int?
  p_role   p_role?   @relation(fields: [id_role], references: [id], onDelete: Cascade)
  p_user   p_user?   @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_notif_read {
  id        Int       @id @default(autoincrement())
  last_read DateTime? @db.Timestamptz(6)
}

model t_productivity_daily_report {
  id                      Int              @id @default(autoincrement())
  id_arrival              Int
  stevedore_foreman       Int?
  chief_ship_foreman      Int?
  chief_shore_foreman     Int?
  tally_clerk             Int?
  foreman                 Int
  gang                    Int
  manpower                Int
  watchmen                Int?
  rope_sling              Int?
  rope_net                Int?
  wire_sling              Int?
  wire_net                Int?
  tray                    Int?
  cement_sling            Int?
  spades                  Int?
  excavator               Int?
  wheel_loader            Int?
  date                    DateTime?        @db.Date
  chief_stevedore_foreman Int              @default(1)
  t_vessel_arrival        t_vessel_arrival @relation(fields: [id_arrival], references: [id], onUpdate: Restrict)
}

model t_project_document {
  id                Int                @id @default(autoincrement())
  id_project        Int
  id_type           Int
  id_status         Int?
  file              String?            @db.VarChar(250)
  updated_by        Int?
  updated_date      DateTime?          @db.Timestamp(6)
  rejection_reason  String             @db.VarChar(250)
  approved_by       Int
  p_user            p_user             @relation(fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_service_request t_service_request  @relation(fields: [id_project], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_document_status m_document_status? @relation(fields: [id_status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_document_type   m_document_type    @relation(fields: [id_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_project_progress_harian {
  id                                                  Int                 @id @default(autoincrement())
  id_subtask                                          Int
  progress_date                                       DateTime            @db.Date
  progress_percentage                                 Float
  manpower_amount                                     Int
  work_area                                           Int
  is_progress                                         Boolean
  progress_decription                                 String?             @db.VarChar(250)
  no_progress_reason                                  String?             @db.VarChar(250)
  image_1                                             String?             @db.VarChar(250)
  image_2                                             String?             @db.VarChar(250)
  image_3                                             String?             @db.VarChar(250)
  created_date                                        DateTime            @db.Timestamp(6)
  created_by                                          Int?
  updated_date                                        DateTime?           @db.Timestamp(6)
  updated_by                                          Int?
  id_service_request                                  Int?
  p_user_p_userTot_project_progress_harian_created_by p_user?             @relation("p_userTot_project_progress_harian_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_service_request                                   t_service_request?  @relation(fields: [id_service_request], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_subtask                                   t_project_subtask   @relation(fields: [id_subtask], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_project_progress_harian_updated_by p_user?             @relation("p_userTot_project_progress_harian_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_project_work_area                                 m_project_work_area @relation(fields: [work_area], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_project_progress_planning {
  id                Int               @id @default(autoincrement())
  week              String            @db.VarChar(100)
  progress          Int
  id_project        Int
  updated_by        Int?
  updated_date      DateTime?         @db.Timestamp(6)
  t_service_request t_service_request @relation(fields: [id_project], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user            p_user?           @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_project_subtask {
  id                                          Int                         @id @default(autoincrement())
  name                                        String                      @db.VarChar(250)
  start_date                                  DateTime                    @db.Date
  end_date                                    DateTime                    @db.Date
  cost                                        Decimal                     @db.Decimal
  created_by                                  Int
  created_date                                DateTime                    @db.Timestamp(6)
  updated_by                                  Int?
  updated_date                                DateTime?                   @db.Timestamp(6)
  id_task                                     Int
  p_user_p_userTot_project_subtask_created_by p_user                      @relation("p_userTot_project_subtask_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_task                              t_project_task              @relation(fields: [id_task], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_project_subtask_updated_by p_user?                     @relation("p_userTot_project_subtask_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_progress_harian                   t_project_progress_harian[]
}

model t_project_task {
  id                                       Int                 @id @default(autoincrement())
  name                                     String              @db.VarChar(250)
  start_date                               DateTime            @db.Date
  end_date                                 DateTime            @db.Date
  created_date                             DateTime            @db.Timestamp(6)
  created_by                               Int
  updated_date                             DateTime?           @db.Timestamp(6)
  updated_by                               Int?
  id_project                               Int
  p_user_p_userTot_project_task_created_by p_user              @relation("p_userTot_project_task_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_service_request                        t_service_request   @relation(fields: [id_project], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_project_task_updated_by p_user?             @relation("p_userTot_project_task_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_subtask                        t_project_subtask[]
}

model t_service_request {
  id                                               Int                           @id @default(autoincrement())
  id_cost_center                                   Int
  id_m_pg_personel                                 Int
  id_sr_reason                                     Int                           @default(3)
  start_time                                       DateTime                      @db.Timestamp(6)
  end_time                                         DateTime                      @db.Timestamp(6)
  id_equipment                                     Int
  sr_description                                   String                        @db.VarChar(250)
  sr_photo                                         String                        @db.VarChar(250)
  sr_drawing                                       String                        @db.VarChar(250)
  har_approval                                     Int?
  candal_approval                                  Int?
  created_by                                       Int
  created_at                                       DateTime                      @db.Timestamp(6)
  updated_at                                       DateTime?                     @db.Timestamp(6)
  sr_number                                        String                        @db.VarChar(255)
  reason_to_reject_apv                             String?                       @db.VarChar(255)
  reason_to_reject_candal                          String?                       @db.VarChar(255)
  main_contractor                                  Int?
  main_contractor_pic                              String?                       @db.VarChar
  main_contractor_phone                            String?                       @db.VarChar
  id_contract_type                                 Int?
  sub_contractor                                   Int?
  sub_contractor_pic                               String?                       @db.VarChar
  sub_contractor_phone                             String?                       @db.VarChar
  id_contract_number                               Int?
  budget_year                                      String?                       @db.VarChar
  wo_number                                        String?                       @db.VarChar
  pr_number                                        String?                       @db.VarChar
  sr_budget_value                                  Int?
  sr_year                                          String?                       @db.VarChar
  contract_name                                    String?                       @db.VarChar
  sr_start_date                                    DateTime?                     @db.Timestamp(6)
  sr_end_date                                      DateTime?                     @db.Timestamp(6)
  ok_number                                        String?                       @db.VarChar(250)
  ok_budget_realization                            Decimal?                      @db.Decimal
  ba_budget_realization                            Decimal?                      @db.Decimal
  budget_remaining                                 Decimal?                      @db.Decimal
  ba_year                                          String?                       @db.VarChar
  tanggal_pengajuan_memo                           DateTime?                     @db.Date
  tanggal_cetak                                    DateTime?                     @db.Date
  tanggal_kembali                                  DateTime?                     @db.Date
  tanggal_kirim_waskrim                            DateTime?                     @db.Date
  lokasi                                           Int?
  p_user_p_userTot_service_request_created_by      p_user                        @relation("p_userTot_service_request_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_contract_management                            t_contract_management?        @relation(fields: [id_contract_number], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_contract_type                                  m_contract_type?              @relation(fields: [id_contract_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_sr_cost_center                                 m_sr_cost_center              @relation(fields: [id_cost_center], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                                          m_asset                       @relation(fields: [id_equipment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel                                    m_pg_personel                 @relation(fields: [id_m_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_sr_reason                                      m_sr_reason                   @relation(fields: [id_sr_reason], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_project_location                               m_project_location?           @relation(fields: [lokasi], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_service_request_main_contractor p_user?                       @relation("p_userTot_service_request_main_contractor", fields: [main_contractor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_service_request_sub_contractor  p_user?                       @relation("p_userTot_service_request_sub_contractor", fields: [sub_contractor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_project_document                               t_project_document[]
  t_project_progress_harian                        t_project_progress_harian[]
  t_project_progress_planning                      t_project_progress_planning[]
  t_project_task                                   t_project_task[]
  t_service_request_approval                       t_service_request_approval[]
  t_service_request_details                        t_service_request_details[]
}

model t_service_request_approval {
  id                 Int               @id @default(autoincrement())
  id_service_request Int
  id_status          Int
  reason             String            @db.VarChar(250)
  created_by         Int
  created_at         DateTime          @db.Timestamp(6)
  p_user             p_user            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_service_request  t_service_request @relation(fields: [id_service_request], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_sr_status        m_sr_status       @relation(fields: [id_status], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_service_request_details {
  id                                                       Int                        @id @default(autoincrement())
  id_contract_type                                         Int
  id_contract_number                                       Int
  main_contractor                                          Int
  main_contractor_pic                                      String?                    @db.VarChar
  main_contractor_telp                                     String?                    @db.VarChar
  sub_contractor                                           Int?
  sub_contractor_pic                                       String?                    @db.VarChar
  subcontractor_telp                                       String?                    @db.VarChar
  id_service_request                                       Int
  budget_year                                              String                     @db.VarChar(250)
  wo_number                                                String                     @db.VarChar
  pr_number                                                String                     @db.VarChar
  sr_budget_value                                          Decimal                    @db.Decimal
  sr_year                                                  String                     @db.VarChar(250)
  owner_estimation                                         String?                    @db.VarChar(250)
  as_built_drawing                                         String?                    @db.VarChar(250)
  schedule                                                 String?                    @db.VarChar(250)
  contract_name                                            String                     @db.VarChar(250)
  sr_start_date                                            DateTime                   @db.Timestamp(6)
  sr_end_date                                              DateTime                   @db.Timestamp(6)
  t_contract_management                                    t_contract_management      @relation(fields: [id_contract_number], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_contract_management_type                               m_contract_management_type @relation(fields: [id_contract_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_service_request_details_contract_type_fkey")
  t_service_request                                        t_service_request          @relation(fields: [id_service_request], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_service_request_details_main_contractor p_user                     @relation("p_userTot_service_request_details_main_contractor", fields: [main_contractor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_service_request_details_sub_contractor  p_user?                    @relation("p_userTot_service_request_details_sub_contractor", fields: [sub_contractor], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_sharing_knowledge {
  id                              Int                               @id @default(autoincrement())
  participant                     String                            @db.VarChar
  participant_capacity            Int?
  start_date                      DateTime                          @db.Date
  end_date                        DateTime                          @db.Date
  duration_per_day                Float
  except_day                      Float?
  total_manhour                   Float
  name                            String                            @db.VarChar
  type                            String                            @default("internal") @db.VarChar
  id_pg_personel                  Int
  file_participant                String?                           @db.VarChar
  m_pg_personel                   m_pg_personel                     @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_sharing_knowledge_speaker_internal_id_fkey")
  t_sharing_knowledge_material    t_sharing_knowledge_material[]
  t_sharing_knowledge_participant t_sharing_knowledge_participant[]
}

model t_sharing_knowledge_material {
  id_sharing_knowledge Int
  name                 String              @db.VarChar
  file                 String              @db.VarChar
  id                   Int                 @id @default(autoincrement())
  t_sharing_knowledge  t_sharing_knowledge @relation(fields: [id_sharing_knowledge], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_sharing_knowledge_participant {
  id                     Int                 @id @default(autoincrement())
  id_t_sharing_knowledge Int
  id_pg_personel         Int
  m_pg_personel          m_pg_personel       @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_sharing_knowledge    t_sharing_knowledge @relation(fields: [id_t_sharing_knowledge], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_target_hours {
  id              Int            @id @default(autoincrement())
  id_arrival_type Int
  id_asset        Int
  hours           Float          @default(0)
  id_activity     Int
  period          Int?
  m_activity      m_activity     @relation(fields: [id_activity], references: [id], onUpdate: Restrict)
  m_arrival_type  m_arrival_type @relation(fields: [id_arrival_type], references: [id], onUpdate: Restrict)
  m_asset         m_asset        @relation(fields: [id_asset], references: [id], onUpdate: Restrict)
}

model t_tonnage_planning {
  id                   Int                 @id @default(autoincrement())
  id_arrival_type      Int
  id_cargo_category    Int
  id_cargo             Int
  period               DateTime            @db.Date
  tonnage              Float               @default(0)
  id_cargo_procurement Int
  id_owner             Int
  vessel_count         Int                 @default(1)
  m_arrival_type       m_arrival_type      @relation(fields: [id_arrival_type], references: [id], onUpdate: Restrict)
  m_cargo              m_cargo             @relation(fields: [id_cargo], references: [id], onUpdate: Restrict)
  m_cargo_category     m_cargo_category    @relation(fields: [id_cargo_category], references: [id], onUpdate: Restrict)
  m_cargo_procurement  m_cargo_procurement @relation(fields: [id_cargo_procurement], references: [id], onUpdate: Restrict)
  m_cargo_owner        m_cargo_owner       @relation(fields: [id_owner], references: [id], onUpdate: Restrict)
}

model t_training {
  id                     Int                      @id @default(autoincrement())
  id_training            Int
  start_date             DateTime                 @db.Timestamp(6)
  end_date               DateTime                 @db.Timestamp(6)
  duration_per_day       Float
  except_day             Float?
  participant_capacity   Int?
  total_manhour          Float
  vendor                 String                   @default("vendor") @db.VarChar
  m_training             m_training               @relation(fields: [id_training], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_training_participant t_training_participant[]
}

model t_training_participant {
  id             Int           @id @default(autoincrement())
  id_t_training  Int
  id_pg_personel Int
  m_pg_personel  m_pg_personel @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_training     t_training    @relation(fields: [id_t_training], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_vessel_additional_cargo {
  id                          Int                         @id @default(autoincrement())
  id_arrival                  Int
  id_cargo                    Int
  weight                      Float
  id_category_additional      Int
  t_vessel_arrival            t_vessel_arrival            @relation(fields: [id_arrival], references: [id], onUpdate: Restrict)
  m_cargo                     m_cargo                     @relation(fields: [id_cargo], references: [id], onUpdate: Restrict)
  m_cargo_category_additional m_cargo_category_additional @relation(fields: [id_category_additional], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival {
  id                                                 Int                                  @id(map: "t_arrival_id") @default(autoincrement())
  draught_on_arrival                                 String?
  description                                        String?
  id_vessel                                          Int
  id_laytime_start_count                             Int
  created_by                                         Int?
  created_date                                       DateTime?                            @db.Timestamp(6)
  updated_by                                         Int?
  updated_date                                       DateTime?                            @db.Timestamp(6)
  demurrage_cost                                     Float?                               @default(0)
  est_time_finish                                    DateTime?                            @db.Timestamp(6)
  id_shipping_agency                                 Int?
  id_pbm                                             Int?
  id_surveyor                                        Int?
  eta_update_desc                                    String?
  file_bl                                            String?                              @db.VarChar
  file_cargo_manifest                                String?                              @db.VarChar
  isps_code                                          String?                              @db.VarChar
  file_sof                                           String?                              @db.VarChar
  file_in_out_cargo                                  String?                              @db.VarChar
  file_pkk                                           String?                              @db.VarChar
  file_surat_ukur                                    String?                              @db.VarChar
  id_surveyor_pic                                    Int?
  arrival_type                                       String?                              @default("shipper") @db.VarChar
  id_origin                                          Int?
  code                                               String?                              @db.VarChar
  shipping_agency_name                               String?                              @db.VarChar
  shipping_agency_email                              String?                              @db.VarChar
  shipping_agency_phone                              String?                              @db.VarChar
  time_nor_tendered                                  DateTime?                            @db.Timestamp(6)
  time_nor_accepted                                  DateTime?                            @db.Timestamp(6)
  time_pilot_ordered                                 DateTime?                            @db.Timestamp(6)
  time_pilot_on_board                                DateTime?                            @db.Timestamp(6)
  time_berthing                                      DateTime?                            @db.Timestamp(6)
  time_unberthing                                    DateTime?                            @db.Timestamp(6)
  time_laytime_commence                              DateTime?                            @db.Timestamp(6)
  contract_drlr                                      Float
  spillage                                           Float?
  est_time_arrival                                   DateTime?                            @db.Timestamp(6)
  file_survey_draught                                String?                              @db.VarChar
  file_survey_ullage                                 String?                              @db.VarChar
  file_survey_analysis                               String?                              @db.VarChar
  survey_draught                                     Float?
  actual_time_start                                  DateTime?                            @db.Timestamp(6)
  actual_time_finish                                 DateTime?                            @db.Timestamptz(6)
  est_demurrage_duration                             Float?
  est_demurrage_cost                                 Float?
  est_despatch_duration                              Float?
  est_despatch_cost                                  Float?
  est_duration                                       Float?
  est_time_completion                                DateTime?                            @db.Timestamptz(6)
  id_target                                          Int?
  status                                             String?                              @db.VarChar
  timesum_congestion                                 Float?
  timesum_laytime_allowed                            Float?
  timesum_laytime_used                               Float?
  timesum_est_time_completed                         DateTime?                            @db.Timestamptz(6)
  timesum_demurrage_on                               DateTime?                            @db.Timestamptz(6)
  timesum_actual_drlr                                Float?
  timesum_est_demurrage                              Float?
  timesum_est_despatch                               Float?
  timesum_preparation_time                           Float?
  timesum_effective_time                             Float?
  timesum_berth_time                                 Float?
  timesum_berth_working_time                         Float?
  timesum_idle_time                                  Float?
  timesum_not_operating_time                         Float?
  timesum_exltu_bad_weather                          Float?
  timesum_exltu_shexuu                               Float?
  timesum_exltu_vessel_trouble                       Float?
  timesum_exltu_waiting_vco                          Float?
  contract_tonnage                                   Float?
  bariksama_code                                     String?                              @db.VarChar
  bariksama_work_contract                            String?                              @db.VarChar
  id_port_orde                                       Int?
  id_bariksama_tariff_pbm                            Int?
  id_bariksama_type                                  Int?
  id_bariksama_activity                              Int?
  id_bariksama_ba                                    Int?
  id_arrival_type                                    Int?
  demurrage_cost_usd                                 Float?                               @default(0)
  id_arrival_term                                    Int
  time_free_pratique_granted                         DateTime?                            @db.Timestamp(6)
  file_free_pratique_granted                         String?                              @db.VarChar
  file_stowage_plan                                  String?                              @db.VarChar
  file_ship_particular                               String?                              @db.VarChar
  id_jetty_override                                  Int?
  id_bariksama_tariff_emkl                           Int?
  id_bariksama_tariff_surv                           Int?
  read_by                                            Json?
  meter_start                                        Float?                               @default(0)
  vessel_reverse                                     Boolean?                             @default(false)
  ea_count                                           Int?
  so_po_code                                         String?                              @db.VarChar
  flip                                               Boolean?                             @default(false)
  description_agency                                 String?
  approved_by_kabag                                  Boolean?                             @default(false)
  approved_by_manager                                Boolean?                             @default(false)
  approved_by_karu_shift                             Boolean?                             @default(false)
  stack                                              Int?                                 @default(1)
  bariksama_date                                     DateTime?                            @default(now()) @db.Timestamptz(6)
  timesum_effective_time_per_day                     Float?
  description_jetvis                                 String?
  id_jetty_part                                      Int?
  stock_jetvis                                       String?                              @db.VarChar
  sample                                             Int?
  pbm_cost                                           Float?
  pbm_cost_usd                                       Float?
  emkl_cost                                          Float?
  emkl_cost_usd                                      Float?
  other_cost                                         Float?
  other_cost_usd                                     Float?
  surveyor_cost                                      Float?
  surveyor_cost_usd                                  Float?
  demurrage_day                                      Float?
  demurrage_note                                     String?
  demurrage_confirm                                  Float?
  despatch_confirm                                   Float?
  timesum_est_despatch_usd                           Float?
  show_on_jetvis                                     Boolean                              @default(true)
  timesum_etd                                        DateTime?                            @db.Timestamp(6)
  time_arrival                                       DateTime?                            @db.Timestamp(6)
  m_arrival_term                                     m_arrival_term                       @relation(fields: [id_arrival_term], references: [id], onUpdate: Restrict)
  m_arrival_type                                     m_arrival_type?                      @relation(fields: [id_arrival_type], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_bariksama_activity                               m_bariksama_activity?                @relation(fields: [id_bariksama_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_bariksama_ba                                     m_bariksama_ba?                      @relation(fields: [id_bariksama_ba], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_bariksama_tariff_emkl                            m_bariksama_tariff_emkl?             @relation(fields: [id_bariksama_tariff_emkl], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_bariksama_tariff_pbm                             m_bariksama_tariff_pbm?              @relation(fields: [id_bariksama_tariff_pbm], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_bariksama_tariff_surv                            m_bariksama_tariff_surv?             @relation(fields: [id_bariksama_tariff_surv], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_bariksama_type                                   m_bariksama_type?                    @relation(fields: [id_bariksama_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_jetty                                            m_jetty?                             @relation(fields: [id_jetty_override], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_jetty_parts                                      m_jetty_parts?                       @relation(fields: [id_jetty_part], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_laytime_start_count                              m_laytime_start_count                @relation(fields: [id_laytime_start_count], references: [id], onUpdate: Restrict)
  m_location                                         m_location?                          @relation(fields: [id_origin], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user_p_userTot_vessel_arrival_id_pbm             p_user?                              @relation("p_userTot_vessel_arrival_id_pbm", fields: [id_pbm], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_port_orde                                        m_port_orde?                         @relation(fields: [id_port_orde], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_vessel_arrival_id_shipping_agency p_user?                              @relation("p_userTot_vessel_arrival_id_shipping_agency", fields: [id_shipping_agency], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "t_vessel_arrival_id_shipping_agency_fkey1")
  p_user_p_userTot_vessel_arrival_id_surveyor        p_user?                              @relation("p_userTot_vessel_arrival_id_surveyor", fields: [id_surveyor], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vendor_personel                                  m_vendor_personel?                   @relation(fields: [id_surveyor_pic], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel                                           m_vessel                             @relation(fields: [id_vessel], references: [id], onUpdate: Restrict)
  t_bariksama                                        t_bariksama[]
  t_housekeeping                                     t_housekeeping[]
  t_input_checklist                                  t_input_checklist[]
  t_logsheet_additional_equipment                    t_logsheet_additional_equipment[]
  t_logsheet_in_vessel_equipment                     t_logsheet_in_vessel_equipment[]
  t_productivity_daily_report                        t_productivity_daily_report[]
  t_vessel_additional_cargo                          t_vessel_additional_cargo[]
  t_vessel_arrival_approval_notes                    t_vessel_arrival_approval_notes[]
  t_vessel_arrival_claims                            t_vessel_arrival_claims[]
  t_vessel_arrival_damages                           t_vessel_arrival_damages[]
  t_vessel_arrival_documents                         t_vessel_arrival_documents[]
  t_vessel_arrival_emkl                              t_vessel_arrival_emkl[]
  t_vessel_arrival_logsheet                          t_vessel_arrival_logsheet[]
  t_vessel_arrival_rearrangement                     t_vessel_arrival_rearrangement[]
  t_vessel_arrival_stowage                           t_vessel_arrival_stowage[]
  t_vessel_arrival_surveyor_services                 t_vessel_arrival_surveyor_services[]
  t_vessel_arrival_timesheet                         t_vessel_arrival_timesheet[]
  t_vessel_cargo                                     t_vessel_cargo[]
  t_vessel_cargo_consignee                           t_vessel_cargo_consignee[]
}

model t_vessel_arrival_approval_notes {
  id               Int              @id @default(autoincrement())
  id_user          Int
  note             String?
  approve_status   Boolean          @default(false)
  id_arrival       Int
  status           String?
  created_date     DateTime?        @default(now()) @db.Timestamptz(6)
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: Cascade)
  p_user           p_user           @relation(fields: [id_user], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival_claims {
  id               Int              @id @default(autoincrement())
  id_arrival       Int
  file_claim       String           @db.VarChar
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_vessel_arrival_damages {
  id               Int              @id @default(autoincrement())
  id_arrival       Int
  start_time       DateTime         @db.Timestamptz(6)
  end_time         DateTime         @db.Timestamptz(6)
  description      String
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival_documents {
  id                Int               @id @default(autoincrement())
  id_arrival        Int
  id_type           Int
  file              String?           @db.VarChar
  id_status         Int               @default(1)
  reason            String?
  updated_by        Int?
  updated_on        DateTime?         @db.Time(6)
  uploaded_date     DateTime?         @db.Timestamp(6)
  t_vessel_arrival  t_vessel_arrival  @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_document_status m_document_status @relation(fields: [id_status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_document_type   m_document_type   @relation(fields: [id_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_vessel_arrival_emkl {
  id               Int              @id @default(autoincrement())
  id_arrival       Int
  id_emkl          Int
  truck_qty        Int              @default(1)
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user           p_user           @relation(fields: [id_emkl], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_vessel_arrival_logsheet {
  id                                                                       Int                               @id @default(autoincrement())
  end_time                                                                 DateTime?                         @db.Timestamp(6)
  id_activity                                                              Int?
  description                                                              String?
  id_vessel                                                                Int?
  shift                                                                    Int?
  start_time                                                               DateTime?                         @db.Timestamp(6)
  id_user                                                                  Int?
  id_trouble_asset                                                         Int?
  code_sap_notification                                                    String?                           @db.VarChar(20)
  trouble_notes                                                            String?
  id_standby_cause                                                         Int?
  created_by                                                               Int?
  created_date                                                             DateTime?                         @db.Timestamptz(6)
  updated_by                                                               Int?
  updated_date                                                             DateTime?                         @db.Timestamptz(6)
  id_area_workcenter_has_assets                                            Int?
  id_arrival                                                               Int?
  id_user_end                                                              Int?
  id_asset                                                                 Int?
  breakdown_time_finish                                                    DateTime?                         @db.Timestamp(6)
  id_work_center                                                           Int?
  id_area                                                                  Int?
  id_breakdown_item                                                        Int?
  id_trouble                                                               Int?
  error_duration                                                           Float?
  est_osm_time_finish                                                      DateTime?                         @db.Timestamp(6)
  id_parent                                                                Int?
  id_route                                                                 Int?
  tonnage                                                                  Int?
  mechanism_asset                                                          String?                           @default("single") @db.VarChar(6)
  tonnage_convert                                                          Int?
  id_hatch_number                                                          Int?
  id_operator_panel                                                        Int?
  id_drlr_rate_note                                                        Int?
  breakdown_mop                                                            Boolean?
  breakdown_first                                                          Boolean?
  pv_max_csu                                                               Int?
  liquid_pressure_indicator                                                Float?
  liquid_temperature_indicator                                             Float?
  id_temp_pressure_indicator                                               Int?
  id_foreman_pg                                                            Int?
  id_vessel_cargo                                                          Int?
  pv_min_csu                                                               Int?
  rit                                                                      Int?
  grease_level                                                             Int?
  hidraulic_oil_level                                                      Int?
  conv_start                                                               Int?
  conv_end                                                                 Int?
  line                                                                     String?                           @db.VarChar
  pi_darat                                                                 Float?
  pi_ship                                                                  Float?
  rate_vessel                                                              Int?
  start_tonnage                                                            Int?
  dt_start                                                                 Int?
  dt_end                                                                   Int?
  breakdown_freq                                                           Int?
  temperature_indicator                                                    Int?
  m_activity                                                               m_activity?                       @relation(fields: [id_activity], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_area                                                                   m_area?                           @relation(fields: [id_area], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_vessel_arrival                                                         t_vessel_arrival?                 @relation(fields: [id_arrival], references: [id], onDelete: Cascade)
  m_asset                                                                  m_asset?                          @relation(fields: [id_asset], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset_items                                                            m_asset_items?                    @relation(fields: [id_breakdown_item], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_drlr_rate_note                                                         m_drlr_rate_note?                 @relation(fields: [id_drlr_rate_note], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel_m_pg_personelTot_vessel_arrival_logsheet_id_foreman_pg     m_pg_personel?                    @relation("m_pg_personelTot_vessel_arrival_logsheet_id_foreman_pg", fields: [id_foreman_pg], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_vessel_hatch                                                           m_vessel_hatch?                   @relation(fields: [id_hatch_number], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_pg_personel_m_pg_personelTot_vessel_arrival_logsheet_id_operator_panel m_pg_personel?                    @relation("m_pg_personelTot_vessel_arrival_logsheet_id_operator_panel", fields: [id_operator_panel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival_logsheet                                                t_vessel_arrival_logsheet?        @relation("t_vessel_arrival_logsheetTot_vessel_arrival_logsheet_id_parent", fields: [id_parent], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_route                                                                  m_route?                          @relation(fields: [id_route], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_standby_cause                                                          m_standby_cause?                  @relation(fields: [id_standby_cause], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_temp_pressure_indicator                                                m_temp_pressure_indicator?        @relation(fields: [id_temp_pressure_indicator], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_vessel_arrival_logsheet_id_liquid_indicator_note_fkey")
  m_trouble                                                                m_trouble?                        @relation(fields: [id_trouble], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_asset_item_troubles                                                    m_asset_item_troubles?            @relation(fields: [id_trouble_asset], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user_p_userTot_vessel_arrival_logsheet_id_user                         p_user?                           @relation("p_userTot_vessel_arrival_logsheet_id_user", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user_p_userTot_vessel_arrival_logsheet_id_user_end                     p_user?                           @relation("p_userTot_vessel_arrival_logsheet_id_user_end", fields: [id_user_end], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vessel                                                                 m_vessel?                         @relation(fields: [id_vessel], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_vessel_cargo                                                           t_vessel_cargo?                   @relation(fields: [id_vessel_cargo], references: [id], onDelete: Cascade)
  m_work_center                                                            m_work_center?                    @relation(fields: [id_work_center], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user_p_userTot_vessel_arrival_logsheet_updated_by                      p_user?                           @relation("p_userTot_vessel_arrival_logsheet_updated_by", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict)
  other_t_vessel_arrival_logsheet                                          t_vessel_arrival_logsheet[]       @relation("t_vessel_arrival_logsheetTot_vessel_arrival_logsheet_id_parent")
  t_vessel_arrival_logsheet_hose                                           t_vessel_arrival_logsheet_hose[]
  t_vessel_arrival_logsheet_items                                          t_vessel_arrival_logsheet_items[]
}

model t_vessel_arrival_logsheet_hose {
  id                        Int                       @id @default(autoincrement())
  id_asset_hose             Int
  sequence                  Int
  created_by                Int?
  created_date              DateTime?                 @db.Timestamp(6)
  updated_by                Int?
  updated_date              DateTime?                 @db.Timestamp(6)
  id_logsheet               Int
  is_checked                Boolean                   @default(false)
  m_asset                   m_asset                   @relation(fields: [id_asset_hose], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet @relation(fields: [id_logsheet], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model t_vessel_arrival_logsheet_items {
  id                        Int                       @id @default(autoincrement())
  id_logsheet               Int
  id_item                   Int
  id_osm                    Int?
  m_asset_items             m_asset_items             @relation(fields: [id_item], references: [id], onUpdate: Restrict)
  t_vessel_arrival_logsheet t_vessel_arrival_logsheet @relation(fields: [id_logsheet], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival_rearrangement {
  id                     Int                      @id(map: "t_rearrangement_history_pkey") @default(autoincrement())
  reason                 String
  created_by             Int
  created_date           DateTime                 @default(now()) @db.Timestamptz(6)
  id_arrival             Int
  file                   String?                  @db.VarChar
  t_vessel_arrival       t_vessel_arrival         @relation(fields: [id_arrival], references: [id], onDelete: Cascade)
  t_vessel_cargo_history t_vessel_cargo_history[]
}

model t_vessel_arrival_stowage {
  id               Int              @id @default(autoincrement())
  id_arrival       Int
  id_hatch         Int
  tonnage          Float            @default(0)
  t_vessel_arrival t_vessel_arrival @relation(fields: [id_arrival], references: [id], onDelete: Cascade)
  m_vessel_hatch   m_vessel_hatch   @relation(fields: [id_hatch], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival_surveyor_services {
  id                          Int                         @id @default(autoincrement())
  id_arrival                  Int
  id_service                  Int
  cost_per_unit               Float?
  id_type_service             Int
  t_vessel_arrival            t_vessel_arrival            @relation(fields: [id_arrival], references: [id], onUpdate: Restrict)
  m_surveyor_service          m_surveyor_service          @relation(fields: [id_service], references: [id], onUpdate: Restrict)
  m_surveyor_service_category m_surveyor_service_category @relation(fields: [id_type_service], references: [id], onUpdate: Restrict)
}

model t_vessel_arrival_timesheet {
  id                Int                @id @default(autoincrement())
  end_time          DateTime?          @db.Timestamp(6)
  id_activity       Int?
  description       String?
  shift             Int                @default(1)
  start_time        DateTime?          @db.Timestamp(6)
  created_by        Int?
  created_date      DateTime?          @db.Timestamptz(6)
  updated_by        Int?
  updated_date      DateTime?          @db.Timestamptz(6)
  id_arrival        Int?
  id_foreman_pg     Int?
  id_foreman_pbm    Int?
  id_jetty_part     Int?
  m_activity        m_activity?        @relation(fields: [id_activity], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "t_vessel_cargo_timesheet_id_activity_fkey")
  t_vessel_arrival  t_vessel_arrival?  @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_vessel_cargo_timesheet_id_arrival_fkey")
  m_vendor_personel m_vendor_personel? @relation(fields: [id_foreman_pbm], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_pg_personel     m_pg_personel?     @relation(fields: [id_foreman_pg], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_vessel_cargo_timesheet_id_foreman_pg_fkey")
  m_jetty_parts     m_jetty_parts?     @relation(fields: [id_jetty_part], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model t_vessel_cargo {
  id                          Int                           @id @default(autoincrement())
  id_arrival                  Int
  id_cargo                    Int
  weight                      Float
  est_time_finish             DateTime?                     @db.Timestamp(6)
  est_time_start              DateTime?                     @db.Timestamp(6)
  est_cost                    Float?
  id_warehouse                Int?
  id_route                    Int?
  est_duration                Float?
  pbm_cost                    Float?
  emkl_cost                   Float?
  est_rate_capacity           Float?
  est_demurrage_cost          Decimal?                      @db.Decimal
  est_demurrage_duration      Float?
  is_overlap                  Boolean?
  is_shifting                 Boolean?
  path                        Json?                         @db.Json
  description                 String?
  created_by                  Int?
  created_date                DateTime?                     @db.Timestamptz(6)
  updated_by                  Int?
  updated_date                DateTime?                     @db.Timestamptz(6)
  actual_time_start           DateTime?                     @db.Timestamp(6)
  actual_time_finish          DateTime?                     @db.Timestamp(6)
  actual_demurrage_cost       Float?
  actual_demurrage_duration   Float?
  meter_start                 Int                           @default(0)
  other_cost                  Float?
  sequence                    Int?
  id_asset                    Int?
  tonnage_remaining           Float?                        @default(0)
  id_owner                    Int
  id_orde                     Int
  id_cargo_category           Int
  jetty_arrangement_note      String?                       @db.VarChar
  target                      Int?
  t_vessel_arrival            t_vessel_arrival              @relation(fields: [id_arrival], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                     m_asset?                      @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo                     m_cargo                       @relation(fields: [id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo_category            m_cargo_category              @relation(fields: [id_cargo_category], references: [id], onUpdate: Restrict)
  m_cargo_orde                m_cargo_orde                  @relation(fields: [id_orde], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo_owner               m_cargo_owner                 @relation(fields: [id_owner], references: [id], onUpdate: Restrict)
  m_route                     m_route?                      @relation(fields: [id_route], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "t_vessel_cargo_id_route_actual_fkey")
  m_warehouse                 m_warehouse?                  @relation(fields: [id_warehouse], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_arrival_logsheet   t_vessel_arrival_logsheet[]
  t_vessel_cargo_productivity t_vessel_cargo_productivity[]
}

model t_vessel_cargo_consignee {
  id                Int              @id(map: "t_vessel_consignee_pkey") @default(autoincrement())
  id_arrival        Int
  id_cargo          Int
  weight            Float
  description       String?
  created_by        Int?
  created_date      DateTime?        @db.Timestamp(6)
  updated_by        Int?
  updated_date      DateTime?        @db.Timestamp(6)
  id_owner          Int
  id_cargo_category Int
  id_orde           Int?
  t_vessel_arrival  t_vessel_arrival @relation(fields: [id_arrival], references: [id], onUpdate: Restrict, map: "t_vessel_consignee_id_arrival_fkey")
  m_cargo           m_cargo          @relation(fields: [id_cargo], references: [id], onUpdate: Restrict, map: "t_vessel_consignee_id_cargo_fkey")
  m_cargo_category  m_cargo_category @relation(fields: [id_cargo_category], references: [id], onUpdate: Restrict, map: "t_vessel_consignee_id_cargo_category_fkey")
  m_cargo_orde      m_cargo_orde?    @relation(fields: [id_orde], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_cargo_owner     m_cargo_owner    @relation(fields: [id_owner], references: [id], onUpdate: Restrict, map: "t_vessel_consignee_id_owner_fkey")
}

model t_vessel_cargo_history {
  id_arrival                     Int?
  id_cargo                       Int?
  weight                         Float?
  est_time_finish                DateTime?                       @db.Timestamp(6)
  est_time_start                 DateTime?                       @db.Timestamp(6)
  est_cost                       Float?
  id_warehouse                   Int?
  id_route                       Int?
  est_duration                   Float?
  pbm_cost                       Float?
  emkl_cost                      Float?
  est_rate_capacity              Float?
  est_demurrage_cost             Float?
  est_demurrage_duration         Float?
  is_shifting                    Boolean?
  path                           Json?
  description                    String?
  updated_by                     Int?
  updated_date                   DateTime?                       @db.Timestamptz(6)
  discharging_rate               Float?
  actual_time_start              DateTime?                       @db.Timestamp(6)
  actual_time_finish             DateTime?                       @db.Timestamp(6)
  other_cost                     Float?
  sequence                       Int?
  id                             Int                             @id @default(autoincrement())
  id_vessel_cargo                Int?
  id_asset                       Int?
  tonnage_remaining              Float?
  is_planning                    Boolean?                        @default(false)
  meter_start                    Float?                          @default(0)
  id_owner                       Int?                            @default(1)
  id_rearrangement               Int?
  t_vessel_arrival_rearrangement t_vessel_arrival_rearrangement? @relation(fields: [id_rearrangement], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model t_vessel_cargo_productivity {
  id                                                  Int                                 @id @default(autoincrement())
  id_wasbm                                            Int?
  id_pbm                                              Int?
  id_emkl                                             Int?
  checker                                             String?                             @db.VarChar
  id_vessel_cargo                                     Int
  id_asset                                            Int?
  shift                                               Int                                 @default(1)
  created_by                                          Int?
  created_date                                        DateTime?                           @db.Timestamptz(6)
  updated_by                                          Int?
  updated_date                                        DateTime?                           @db.Timestamptz(6)
  id_warehouse                                        Int?
  date                                                DateTime?                           @db.Date
  tonnage_convert                                     Float?
  pbm_cost                                            Float?                              @default(0)
  emkl_cost                                           Float?                              @default(0)
  other_cost                                          Float?                              @default(0)
  is_holiday                                          Boolean?                            @default(false)
  is_great_day                                        Boolean?                            @default(false)
  cost_multiplier                                     Float?                              @default(1)
  conversion                                          Boolean                             @default(true)
  total_gang                                          Int?
  m_asset                                             m_asset?                            @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_vessel_cargo_productivity_id_emkl  p_user?                             @relation("p_userTot_vessel_cargo_productivity_id_emkl", fields: [id_emkl], references: [id], onDelete: Restrict, onUpdate: Restrict)
  p_user_p_userTot_vessel_cargo_productivity_id_pbm   p_user?                             @relation("p_userTot_vessel_cargo_productivity_id_pbm", fields: [id_pbm], references: [id], onDelete: Restrict, onUpdate: Restrict)
  t_vessel_cargo                                      t_vessel_cargo                      @relation(fields: [id_vessel_cargo], references: [id], onDelete: Cascade)
  m_warehouse                                         m_warehouse?                        @relation(fields: [id_warehouse], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_vessel_cargo_productivity_id_wasbm p_user?                             @relation("p_userTot_vessel_cargo_productivity_id_wasbm", fields: [id_wasbm], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_vessel_cargo_productivity_hatch                   t_vessel_cargo_productivity_hatch[]
}

model t_vessel_cargo_productivity_hatch {
  id                                                                                    Int                         @id @default(autoincrement())
  id_productivity                                                                       Int
  id_hatch                                                                              Int?
  tonnage                                                                               Float?
  rit                                                                                   Int?
  id_foreman_pbm                                                                        Int?
  id_mandor_pbm                                                                         Int?
  id_checker_pbm                                                                        Int?
  id_paltu_pbm                                                                          Int?
  total_gang                                                                            Int?
  m_vendor_personel_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_checker_pbm m_vendor_personel?          @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_checker_pbm", fields: [id_checker_pbm], references: [id], onUpdate: SetNull)
  m_vendor_personel_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_foreman_pbm m_vendor_personel?          @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_foreman_pbm", fields: [id_foreman_pbm], references: [id], onUpdate: SetNull)
  m_vessel_hatch                                                                        m_vessel_hatch?             @relation(fields: [id_hatch], references: [id], onDelete: Restrict, onUpdate: Restrict)
  m_vendor_personel_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_mandor_pbm  m_vendor_personel?          @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_mandor_pbm", fields: [id_mandor_pbm], references: [id], onUpdate: SetNull)
  m_vendor_personel_m_vendor_personelTot_vessel_cargo_productivity_hatch_id_paltu_pbm   m_vendor_personel?          @relation("m_vendor_personelTot_vessel_cargo_productivity_hatch_id_paltu_pbm", fields: [id_paltu_pbm], references: [id], onUpdate: SetNull)
  t_vessel_cargo_productivity                                                           t_vessel_cargo_productivity @relation(fields: [id_productivity], references: [id], onDelete: Cascade)
}

model t_whatsapp_temporary {
  id              Int    @id @default(autoincrement())
  detail_pipeline String @db.VarChar
}

model t_wms_io {
  id                                                    Int                 @id @default(autoincrement())
  id_cargo                                              Int
  date                                                  DateTime            @db.Timestamp(6)
  shift                                                 Int
  id_asset                                              Int
  tonnage                                               Float
  rit                                                   Int?
  revision_note                                         String
  type                                                  String              @db.VarChar(6)
  created_by                                            Int
  created_date                                          DateTime            @db.Timestamp(6)
  updated_by                                            Int
  updated_date                                          DateTime            @db.Timestamp(6)
  id_warehouse_input                                    Int
  id_warehouse_output                                   Int
  id_pg_personel                                        Int?
  shovel                                                String?             @db.VarChar(255)
  company                                               String?             @db.VarChar
  nopol_id                                              Int?
  transportir_id                                        Int?
  p_user_p_userTot_wms_io_created_by                    p_user              @relation("p_userTot_wms_io_created_by", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_asset                                               m_asset             @relation(fields: [id_asset], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_cargo                                               m_cargo             @relation(fields: [id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_pg_personel                                         m_pg_personel?      @relation(fields: [id_pg_personel], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_warehouse_m_warehouseTot_wms_io_id_warehouse_input  m_warehouse         @relation("m_warehouseTot_wms_io_id_warehouse_input", fields: [id_warehouse_input], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_warehouse_m_warehouseTot_wms_io_id_warehouse_output m_warehouse         @relation("m_warehouseTot_wms_io_id_warehouse_output", fields: [id_warehouse_output], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_nopol                                           m_wms_nopol?        @relation(fields: [nopol_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  m_wms_transportir                                     m_wms_transportir?  @relation(fields: [transportir_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  p_user_p_userTot_wms_io_updated_by                    p_user              @relation("p_userTot_wms_io_updated_by", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  t_wms_io_revision                                     t_wms_io_revision[]
}

model t_wms_io_revision {
  id                  Int      @id @default(autoincrement())
  id_wms_io           Int
  id_cargo            Int
  date                DateTime @db.Timestamp(6)
  shift               Int
  id_asset            Int
  tonnage             Int
  rit                 Int?
  revision_note       String
  type                String   @db.VarChar(6)
  updated_by          Int
  updated_date        DateTime @db.Timestamp(6)
  id_warehouse_input  Int
  id_warehouse_output Int
  t_wms_io            t_wms_io @relation(fields: [id_wms_io], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
